{
  "swagger": "2.0",
  "info": {
    "version": "External",
    "title": "OneInc.PortalOne.Api fgdg df gdfg"
  },
  "host": "testportalone.processonepayments.com",
  "basePath": "/Api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/AccessToken/Create": {
      "post": {
        "tags": [
          "AccessToken"
        ],
        "summary": "Create new AccessToken with associated data",
        "operationId": "Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateAccessTokenResponse"
            }
          }
        }
      }
    },
    "/AutoPay/Cancel": {
      "post": {
        "tags": [
          "AutoPay"
        ],
        "summary": "This operation  is used to cancel existing AutoPay Enrollment.",
        "operationId": "Cancel",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to cancel AutoPay Enrollment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelAutoPayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancelAutoPayResponse"
            }
          }
        }
      }
    },
    "/AutoPay/CheckPaymentMethodStatus": {
      "post": {
        "tags": [
          "AutoPay"
        ],
        "summary": "This operation returns the result of checking the use of the payment method for AutoPay.",
        "operationId": "CheckPaymentMethodStatus",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to check payment method using",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckPaymentMethodAutoPayStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckPaymentMethodAutoPayStatusResponse"
            }
          }
        }
      }
    },
    "/AutoPay/Enroll": {
      "post": {
        "tags": [
          "AutoPay"
        ],
        "summary": "This operation is used to create a new AutoPay Enrollment.",
        "operationId": "Enroll",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to create AutoPay Enrollment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnrollAutoPayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnrollAutoPayResponse"
            }
          }
        }
      }
    },
    "/AutoPay/SearchActiveEnrollments": {
      "post": {
        "tags": [
          "AutoPay"
        ],
        "summary": "This operation returns an active AutoPay Enrollments for provided policies.",
        "operationId": "SearchActiveEnrollments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to search AutoPay Enrollments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchActiveEnrollmentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchActiveEnrollmentsResponse"
            }
          }
        }
      }
    },
    "/AutoPay/Modify": {
      "post": {
        "tags": [
          "AutoPay"
        ],
        "summary": "This operation is used to modify an existing AutoPay Enrollment.\r\nThis method is used to change an existing installment plan.\r\nIf InstallmentEngine is Carrier-controlled (i.e. carrier provides control of Installment Plans by ExternalAPI),\r\nthe Installment Plan will be updated by Carrier, and installment plan information will be recieved from Carrier side.\r\nIf InstallmentEngine is contolled by OneInc, Installment Plan will be changed and installment plan information will be recieved.",
        "operationId": "Modify",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyAutoPayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModifyAutoPayResponse"
            }
          }
        }
      }
    },
    "/AutoPay/ChargePayment": {
      "post": {
        "tags": [
          "AutoPay"
        ],
        "summary": "This operation is used to charge existing AutoPay Enrollment.\r\nIt is used to make a payment for a particular policy with an existing AutoPay installment plan.\r\nWhen payment has been processed a postback about result and payment information will be sent to Carrier.",
        "operationId": "ChargePayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to charge AutoPay Enrollment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChargeAutoPayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeAutoPayResponse"
            }
          }
        }
      }
    },
    "/Card/SaveMobile": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "This operation tokenizes all the required information for Apple Pay payment.\r\nOnce the information is tokenized, you no longer have to provide us any sensitive information\r\nto make payments to this card. To initiate transactions with a token simply provide the token\r\nthat is returned in the SaveMobile results in the ProcessOne RESTful API.\r\nNote: the first payment must be made with the token within 30 minutes of the SaveMobile request.",
        "operationId": "SaveMobile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Credit card and holder information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveMobileCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveMobileCardResponse"
            }
          }
        }
      }
    },
    "/Card/ChargeMobile": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "This operation allows making a payment using the Apple Pay as a provider,\r\n which initiates a transfer of money from a particular customer account to the merchant account.\r\nYou have to provide a valid payment token in your request.",
        "operationId": "ChargeMobile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Credit card and holder information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChargeMobileCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChargeMobileCardResponse"
            }
          }
        }
      }
    },
    "/Card/Save": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "This operation tokenizes all the required information about a credit card payment method.\r\nOnce the card information is tokenized, you no longer have to provide us any sensitive credit card information.\r\nTo initiate transactions with a tokenized card simply provide the token that is returned by our API.",
        "operationId": "Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Credit card and holder information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveCardResponse"
            }
          }
        }
      }
    },
    "/Card/GetAcceptedCardTypes": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "This operation returns available card types.",
        "operationId": "GetAcceptedCardTypes",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data for getting accepted card types",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAcceptedCardTypesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAcceptedCardTypesResponse"
            }
          }
        }
      }
    },
    "/Card/ValidateBin": {
      "post": {
        "tags": [
          "Card"
        ],
        "summary": "This operation returns card information.",
        "operationId": "ValidateBin",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data for getting credit card information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateBinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateBinResponse"
            }
          }
        }
      }
    },
    "/Customer/CreateAccount": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "This operation creates a record for a new customer entity, generates and returns an unique identifier for it.\r\nThe method also creates a record in the Wallet table for the customer.",
        "operationId": "CreateAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "customer information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateAccountResponse"
            }
          }
        }
      }
    },
    "/Eft/Save": {
      "post": {
        "tags": [
          "Eft"
        ],
        "summary": "This operation tokenizes all the required information about a bank account payment method.\r\nOnce the bank account information has been tokenized, you no longer have to provide us any sensitive and personal information\r\nto debit or credit a bank account, just use the token that is retunred by our API.",
        "operationId": "Save",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveEftRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SaveEftResponse"
            }
          }
        }
      }
    },
    "/PaymentMethod/Get": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "This operation returns saved payment methods.",
        "operationId": "Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data for getting saved payment methods",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPaymentMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPaymentMethodResponse"
            }
          }
        }
      }
    },
    "/PaymentMethod/GetDefault": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "This operation returns default payment method.",
        "operationId": "GetDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data for getting default payment method",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDefaultPaymentMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDefaultPaymentMethodResponse"
            }
          }
        }
      }
    },
    "/PaymentMethod/SetAsDefault": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "This operation sets the default payment method.",
        "operationId": "SetAsDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Payment method data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetAsDefaultPaymentMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SetAsDefaultPaymentMethodResponse"
            }
          }
        }
      }
    },
    "/PaymentMethod/Remove": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "This operation removes payment method.",
        "operationId": "Remove",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data for removing payment method",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemovePaymentMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RemovePaymentMethodResponse"
            }
          }
        }
      }
    },
    "/Receipt/DownloadReceipt": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "This operation returns payment receipt as pdf file.",
        "operationId": "DownloadReceipt",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "receiptId",
            "in": "query",
            "description": "Payment receipt Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "toPreview",
            "in": "query",
            "description": "Optional: Indicates that receipt file can be opened in a browser preview",
            "required": false,
            "type": "boolean",
            "x-emitDefaultValue": true
          },
          {
            "name": "extendedParameters",
            "in": "query",
            "description": "Custom payment properties",
            "required": false,
            "type": "object"
          },
          {
            "name": "transactionId",
            "in": "query",
            "description": "Transaction Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "portalOneSessionKey",
            "in": "query",
            "description": "Session key",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Receipt/DownloadReceipts": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "This operation returns payment receipts as merged pdf file.",
        "operationId": "DownloadReceipts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DownloadReceiptsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Receipt/Email": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "This operation generates a payment receipt and sends it",
        "operationId": "Email",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to email receipt\"",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailReceiptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmailReceiptResponse"
            }
          }
        }
      }
    },
    "/Receipt/EmailReceipts": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "This operation generates a payment receipts and sends it",
        "operationId": "EmailReceipts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to email receipts\"",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailReceiptsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EmailReceiptsResponse"
            }
          }
        }
      }
    },
    "/Receipt/TextMessage": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "This operation sends a text message with a payment receipt.",
        "operationId": "TextMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextMessageReceiptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TextMessageReceiptResponse"
            }
          }
        }
      }
    },
    "/Receipt/TextMessageReceipts": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "This operation sends a text message with a payment receipts.",
        "operationId": "TextMessageReceipts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextMessageReceiptsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TextMessageReceiptsResponse"
            }
          }
        }
      }
    },
    "/ScheduledPayment/CancelByPublicId": {
      "post": {
        "tags": [
          "ScheduledPayment"
        ],
        "summary": "This operation is used to cancel existing ScheduledPayment.",
        "operationId": "CancelByPublicId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Data to cancel ScheduledPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelScheduledPaymentByPublicIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancelScheduledPaymentResponse"
            }
          }
        }
      }
    },
    "/ScheduledPayment/GetScheduledPaymentsByCustomerId": {
      "get": {
        "tags": [
          "ScheduledPayment"
        ],
        "operationId": "GetScheduledPaymentsByCustomerId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "portalOneAuthenticationKey",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "portalOneSessionKey",
            "in": "query",
            "description": "Session key",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetScheduledPaymentsByCustomerIdResponse"
            }
          }
        }
      }
    },
    "/Session/Create": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "This operation is used to initiate the API session, and creates the PortalOneSessionKey.\r\nOnce the PortalOneSessionKey is created, you can use it to access other PortalOne API operations.",
        "operationId": "Create",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "portalOneAuthenticationKey",
            "in": "query",
            "description": "Authentication key",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "User role",
            "required": false,
            "type": "string"
          },
          {
            "name": "processOneAuthenticationKey",
            "in": "query",
            "description": "Unique identifier for ProcessOne Instance",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetOperation",
            "in": "query",
            "description": "Target operation for which the session is created",
            "required": false,
            "type": "string",
            "enum": [
              "MakePayment",
              "SavePaymentMethod",
              "ManagePaymentMethods",
              "EnrollAutoPay",
              "QuickPay",
              "CsrMakePayment"
            ],
            "x-nullable": true
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Client facing customer identifier",
            "required": false,
            "type": "string",
            "format": "uuid",
            "x-nullable": true
          },
          {
            "name": "isPortalTestPreviewMode",
            "in": "query",
            "description": "Flag indicates if portal will be opened in Test/Preview mode",
            "required": false,
            "type": "boolean",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateSessionResponse"
            }
          }
        }
      }
    },
    "/Session/Refresh": {
      "post": {
        "tags": [
          "Session"
        ],
        "operationId": "Refresh",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefreshSessionResponse"
            }
          }
        }
      }
    },
    "/Session/OpenApplePaySession": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "This method is used to contact Apple Pay server to open and validate Apple Pay payment session",
        "operationId": "OpenApplePaySession",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenApplePaySessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenApplePaySessionResponse"
            }
          }
        }
      }
    },
    "/Session/InitializeAuthenticationSession": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "This operation is used to initiate a temporary API session for authentication purposes and creates the PortalOneSessionKey.\r\nOnce the PortalOneSessionKey is created, you can use it to access PortalOne API operations related to authentication.",
        "operationId": "InitializeAuthenticationSession",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InitializeAuthenticationSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InitializeAuthenticationSessionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenType": {
      "description": "AccessToken type",
      "enum": [
        "Client",
        "Server"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "AccessTokenType",
        "values": [
          {
            "name": "Client",
            "value": 1
          },
          {
            "name": "Server",
            "value": 2
          }
        ]
      }
    },
    "CreateAccessTokenRequest": {
      "description": "Request to create AccessToken",
      "required": [
        "PortalOneAuthenticationKey",
        "Type"
      ],
      "type": "object",
      "properties": {
        "PortalOneAuthenticationKey": {
          "description": "Authentication",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/AccessTokenType"
        },
        "Payload": {
          "description": "Data to store",
          "type": "object"
        },
        "ExpirationDate": {
          "format": "date-time",
          "description": "Date of the token expiration",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CreateAccessTokenResponse": {
      "description": "Response of the CreateAccessToken operation",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Token": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CancelAutoPayRequest": {
      "description": "Cancel AutoPay operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AutoPayEnrollmentIds": {
              "description": "Collection of AutoPay Enrollment Ids which should be cancelled",
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "CancelAutoPayResponse": {
      "description": "Cancel AutoPay Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CheckPaymentMethodAutoPayStatusRequest": {
      "description": "Check Payment Method AutoPay status operation request",
      "required": [
        "Token"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Token"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "description": "Payment Method Token",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "CheckPaymentMethodAutoPayStatusResponse": {
      "description": "Check Payment Method AutoPay Status Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AutoPayEnrollments": {
              "description": "All related AutoPay Enrollments",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethodAutoPayEnrollment"
              }
            },
            "IsAutoPayEnrolled": {
              "description": "Is AutoPay Enrolled",
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "PaymentMethodAutoPayEnrollment": {
      "description": "Payment Method AutoPay Enrollment",
      "required": [],
      "type": "object",
      "properties": {
        "AutoPayEnrollmentId": {
          "format": "int32",
          "description": "Unique identifier for AutoPay Enrollment",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "PolicyNumberRef": {
          "description": "Policy Number",
          "type": "string"
        }
      }
    },
    "WithdrawalFrequency": {
      "description": "Specifies how often payments should be made. Options: monthly, quarterly, semiannually, annually",
      "enum": [
        "Monthly",
        "Quarterly",
        "Semiannually",
        "Annually"
      ],
      "type": "string",
      "x-nullable": true,
      "x-ms-enum": {
        "name": "WithdrawalFrequency",
        "values": [
          {
            "name": "Monthly",
            "value": 1
          },
          {
            "name": "Quarterly",
            "value": 3
          },
          {
            "name": "Semiannually",
            "value": 6
          },
          {
            "name": "Annually",
            "value": 12
          }
        ]
      }
    },
    "AutoPayEngineType": {
      "description": "This field will define who will control the AutoPay Payment Plan generation and recurring scheduling - whether it is Carrier Controlled or InstallmentsEngine controlled.",
      "enum": [
        "InstallmentsEngine",
        "Carrier"
      ],
      "type": "string",
      "x-nullable": true,
      "x-ms-enum": {
        "name": "AutoPayEngineType",
        "values": [
          {
            "name": "InstallmentsEngine",
            "value": 0
          },
          {
            "name": "Carrier",
            "value": 1
          }
        ]
      }
    },
    "EnrollAutoPayRequest": {
      "description": "Enroll AutoPay operation request",
      "required": [
        "AmountPerInstallment",
        "NumberOfInstallments",
        "PaymentMethodDetails",
        "PolicyRefNumber"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "AmountPerInstallment",
            "NumberOfInstallments",
            "PaymentMethodDetails",
            "PolicyRefNumber"
          ],
          "type": "object",
          "properties": {
            "AmountPerInstallment": {
              "format": "decimal",
              "description": "Payment amount for each installment",
              "type": "number",
              "x-nullable": true
            },
            "ChargeFee": {
              "description": "Should we charge with fee (default - true)",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ConvenienceFeeType": {
              "description": "Provides the Type of Convenience Service Fee. (Default, Waive Fee, New Business, etc.)",
              "type": "string"
            },
            "CustomerId": {
              "format": "uuid",
              "description": "Client facing customer identifier",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            },
            "CustomerName": {
              "description": "Customer Name",
              "maxLength": 250,
              "minLength": 0,
              "type": "string"
            },
            "Email": {
              "description": "Customer email address(es). Send multiple addresses as semicolon delimited values.",
              "maxLength": 250,
              "minLength": 0,
              "type": "string"
            },
            "NumberOfInstallments": {
              "format": "int32",
              "description": "Number of installment payments to be made",
              "maximum": 300,
              "minimum": 1,
              "type": "integer",
              "x-nullable": true
            },
            "PaymentMethodDetails": {
              "$ref": "#/definitions/AutoPayPaymentMethodDetails",
              "description": "Details that will be used to define the payment method for AutoPay."
            },
            "PolicyRefNumber": {
              "description": "Policy Number",
              "type": "string"
            },
            "WithdrawalDay": {
              "format": "int32",
              "description": "Specifies day of month when payments should be made. Either WithdrawalDay or EffectiveDate should be specified.",
              "type": "integer",
              "x-nullable": true
            },
            "EffectiveDate": {
              "format": "date-time",
              "description": "The date on which the first installment plan payment will be made. Must be at least plus one day from the current date. Either WithdrawalDay or EffectiveDate should be specified.",
              "type": "string",
              "x-nullable": true
            },
            "WithdrawalFrequency": {
              "$ref": "#/definitions/WithdrawalFrequency"
            },
            "AutoPayEngineType": {
              "$ref": "#/definitions/AutoPayEngineType"
            },
            "ExternalSchedulerEndpoint": {
              "description": "This field value should only be sent when autoPayEngineType = \"Carrier\".\r\nDigital Payments will then use this endpoint to eventually send user-selected Payment Preferences for Auto-Pay Plan creation and scheduling.",
              "type": "string"
            },
            "SuppressPlanChangedSignalIOnEnrollment": {
              "description": "Suppresses SignalInstallmentPlanChanged sending on Enrollment when the flag value is true.",
              "type": "boolean",
              "x-nullable": true
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional customer parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "AutoPayPaymentMethodDetails": {
      "description": "AutoPay Payment Method Details",
      "required": [],
      "type": "object",
      "properties": {
        "Token": {
          "description": "Saved payment method token that will be used for the remaining installment payments.",
          "type": "string"
        },
        "CardDetails": {
          "$ref": "#/definitions/CardDetails",
          "description": "Card details that will be used for the remaining installment payments."
        },
        "EftDetails": {
          "$ref": "#/definitions/EftDetails",
          "description": "Eft details  that will be used for the remaining installment payments."
        }
      }
    },
    "CardDetails": {
      "description": "Card details",
      "required": [
        "ExpirationYear",
        "ExpirationMonth"
      ],
      "type": "object",
      "properties": {
        "ExpirationYear": {
          "format": "int32",
          "description": "Card expiration year",
          "type": "integer",
          "x-nullable": true
        },
        "ExpirationMonth": {
          "format": "int32",
          "description": "Card expiration month",
          "type": "integer",
          "x-nullable": true
        },
        "Holder": {
          "$ref": "#/definitions/Customer",
          "description": "Card holder details"
        },
        "Number": {
          "description": "Card number",
          "type": "string"
        },
        "ValidationValue": {
          "description": "Card validation value",
          "type": "string"
        }
      }
    },
    "EftAccountType": {
      "description": "EFT account type - Checking / Savings.",
      "enum": [
        "Undefined",
        "Checking",
        "Savings"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "EftAccountType",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "Checking",
            "value": 1
          },
          {
            "name": "Savings",
            "value": 2
          }
        ]
      }
    },
    "TokenReusability": {
      "description": "Ability to reuse token for all merchants",
      "enum": [
        "Undefined",
        "AllMerchants"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "TokenReusability",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "AllMerchants",
            "value": 1
          }
        ]
      }
    },
    "EftDetails": {
      "description": "Electronic transfer details",
      "required": [
        "Type",
        "TokenReusability"
      ],
      "type": "object",
      "properties": {
        "RoutingNumber": {
          "description": "The bank routing number. Must contain numbers or hyphens.",
          "type": "string"
        },
        "AccountNumber": {
          "description": "Account number. Must contain only numbers.",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/EftAccountType"
        },
        "AccountGroupCode": {
          "description": "This field is used to route money to different accounts based on a predefined groups.",
          "type": "string"
        },
        "CustomerName": {
          "description": "Customer name",
          "type": "string"
        },
        "TokenReusability": {
          "$ref": "#/definitions/TokenReusability"
        }
      }
    },
    "Customer": {
      "description": "Customer",
      "required": [],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Zip": {
          "description": "Zip code",
          "type": "string"
        },
        "Address": {
          "description": "Address",
          "type": "string"
        }
      }
    },
    "EnrollAutoPayResponse": {
      "description": "Enroll AutoPay Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AutoPayEnrollmentId": {
              "format": "int32",
              "description": "Unique identifier for AutoPay Enrollment",
              "type": "integer",
              "x-nullable": true
            },
            "Token": {
              "description": "Saved payment method token that is used for the remaining installment payments.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SearchActiveEnrollmentsRequest": {
      "description": "Search Active Enrollments operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PolicyRefNumbers": {
              "description": "Collections of Policy Numbers",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "SearchActiveEnrollmentsResponse": {
      "description": "Search Active Enrollments operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Results": {
              "description": "Search results",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyAutoPayEnrollmentSearchResult"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "AutoPayEnrollmentSearchStatus": {
      "description": "Search status",
      "enum": [
        "Found",
        "NotFound",
        "MultipleEnrollmentsFound",
        "ErrorOccurred"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "AutoPayEnrollmentSearchStatus",
        "values": [
          {
            "name": "Found",
            "value": 1
          },
          {
            "name": "NotFound",
            "value": 2
          },
          {
            "name": "MultipleEnrollmentsFound",
            "value": 3
          },
          {
            "name": "ErrorOccurred",
            "value": 4
          }
        ]
      }
    },
    "PolicyAutoPayEnrollmentSearchResult": {
      "description": "Policy AutoPay enrollment search result",
      "required": [
        "SearchStatus"
      ],
      "type": "object",
      "properties": {
        "EnrollmentDetails": {
          "$ref": "#/definitions/AutoPayEnrollment",
          "description": "Enrollment details"
        },
        "PolicyRefNumber": {
          "description": "Policy Number",
          "type": "string"
        },
        "SearchStatus": {
          "$ref": "#/definitions/AutoPayEnrollmentSearchStatus"
        },
        "StatusDescription": {
          "description": "Status Description",
          "type": "string"
        }
      }
    },
    "AutoPayEnrollment": {
      "description": "AutoPay Enrollment",
      "required": [
        "WithdrawalFrequency",
        "AutoPayEngineType"
      ],
      "type": "object",
      "properties": {
        "Amount": {
          "format": "decimal",
          "description": "The total amount that will be collected.",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "RemainingAmount": {
          "format": "decimal",
          "description": "The remaining amount is to be collected.",
          "type": "number",
          "x-nullable": true
        },
        "AutoPayEnrollmentId": {
          "format": "int32",
          "description": "Unique identifier for AutoPay Enrollment",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "EnrollmentDate": {
          "format": "date-time",
          "description": "The date on which the first installment plan payment will be made.",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "Token": {
          "description": "Saved payment method token that is used for the remaining installment payments.",
          "type": "string"
        },
        "WithdrawalDay": {
          "format": "int32",
          "description": "Specifies day of month when payments should be made",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "WithdrawalFrequency": {
          "$ref": "#/definitions/WithdrawalFrequency"
        },
        "AutoPayEngineType": {
          "$ref": "#/definitions/AutoPayEngineType"
        },
        "ExternalSchedulerEndpoint": {
          "description": "This field value should only be sent when autoPayEngineType = \"Carrier\".\r\nDigital Payments will then use this endpoint to eventually send user-selected Payment Preferences for Auto-Pay Plan creation and scheduling.",
          "type": "string"
        },
        "NumberOfInstallments": {
          "format": "int32",
          "description": "Number of installment payments to be made",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "AmountPerInstallment": {
          "format": "decimal",
          "description": "Payment amount for each installment",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "NextPaymentDate": {
          "format": "date-time",
          "description": "Next payment date",
          "type": "string",
          "x-nullable": true
        },
        "ChargeFee": {
          "description": "Indicates if the payments will are/were processed with or without a fee",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "ConvenienceFeeType": {
          "description": "Customizable convenience fee type that is matched with different types of transactions",
          "type": "string"
        }
      }
    },
    "ModifyAutoPayRequest": {
      "description": "Request for modifying Installment Plan parameters.",
      "required": [
        "PortalOneAuthenticationKey",
        "PolicyRefNumber",
        "WithdrawalDay"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PortalOneAuthenticationKey",
            "PolicyRefNumber",
            "WithdrawalDay"
          ],
          "type": "object",
          "properties": {
            "PortalOneAuthenticationKey": {
              "description": "Unique Identifier for the modal template.",
              "maxLength": 36,
              "minLength": 0,
              "type": "string"
            },
            "PolicyRefNumber": {
              "description": "Used to pass policy number or quote number for reference. This value is searchable and displayed in the Transaction search.",
              "type": "string"
            },
            "ChargeFee": {
              "description": "Indicates if the payment will be/was processed with or without a fee",
              "type": "boolean",
              "x-nullable": true
            },
            "ConvenienceFeeType": {
              "description": "Customizable convenience fee type that is matched with different types of transactions",
              "type": "string"
            },
            "ExternalSchedulerEndpoint": {
              "description": "Carrier System Scheduler Engine endpoint",
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            },
            "Token": {
              "description": "Payment Method Token.",
              "type": "string"
            },
            "Email": {
              "description": "Customer email address.",
              "maxLength": 250,
              "minLength": 0,
              "type": "string"
            },
            "WithdrawalFrequency": {
              "$ref": "#/definitions/WithdrawalFrequency"
            },
            "AmountPerInstallment": {
              "format": "decimal",
              "description": "Payment amount for each installment.",
              "maximum": 100000,
              "type": "number",
              "x-nullable": true
            },
            "NumberOfInstallments": {
              "format": "int32",
              "description": "Number of total installments",
              "maximum": 300,
              "minimum": 1,
              "type": "integer",
              "x-nullable": true
            },
            "WithdrawalDay": {
              "format": "int32",
              "description": "Specifies day of month when payments should be made",
              "maximum": 31,
              "minimum": 1,
              "type": "integer",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "ModifyAutoPayResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ChargeAutoPayRequest": {
      "required": [
        "PortalOneAuthenticationKey",
        "PolicyRefNumber",
        "Amount"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PortalOneAuthenticationKey",
            "PolicyRefNumber",
            "Amount"
          ],
          "type": "object",
          "properties": {
            "PortalOneAuthenticationKey": {
              "description": "Unique Identifier for the modal template.",
              "maxLength": 36,
              "minLength": 0,
              "type": "string"
            },
            "PolicyRefNumber": {
              "description": "Used to pass policy number or quote number for reference. This value is also referred to as ClientReferenceData1 field in ExtendedParameters dictionary. This value is searchable and displayed in the Transaction search.",
              "type": "string"
            },
            "Amount": {
              "format": "decimal",
              "description": "Amount to charge excludes fees.",
              "maximum": 100000,
              "type": "number",
              "x-emitDefaultValue": true
            },
            "AccountGroupCode": {
              "description": "Indicates the account group/corresponding bank account where the transaction's funds will be allocated from the set of account groups configured in your merchant settings. If omitted, the default account group configured in your merchant settings will be used.",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional customer parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ChargeAutoPayResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AuthCode": {
              "description": "Authorization code sent from Bank. Can be used for reference.",
              "type": "string"
            },
            "BatchNumber": {
              "format": "int32",
              "description": "The batch number to which the ProcessOne transaction was attached.",
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "CustomerId": {
              "description": "One Inc customer identifier.",
              "type": "string"
            },
            "ExternalCustomerId": {
              "description": "External generated ID of Customer.",
              "type": "string"
            },
            "CustomerName": {
              "description": "Name that was provided with a card or bank account information. Passed back as Customer Name.",
              "type": "string"
            },
            "OutboundApiKey": {
              "description": "Unique Identifier for the outbound API.",
              "type": "string"
            },
            "PaymentAmount": {
              "format": "decimal",
              "description": "The premium payment amount excluding any convenience fees.",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "ConvenienceFee": {
              "format": "decimal",
              "description": "The convenience fee applied to payment amount.",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "TimeZone": {
              "description": "Time zone code.",
              "type": "string"
            },
            "TokenId": {
              "description": "Payment method TokenId that will be used for the payments.",
              "type": "string"
            },
            "TransactionDate": {
              "format": "date-time",
              "description": "Date Stamp of the payment.",
              "type": "string",
              "x-nullable": true
            },
            "TransactionId": {
              "description": "Transaction identifier for the payment.",
              "type": "string"
            },
            "PaymentMethod": {
              "$ref": "#/definitions/PaymentDetailsBase",
              "description": "Payment Method."
            },
            "PolicyNumber": {
              "description": "Policy Number.",
              "type": "string"
            },
            "AccountGroupCode": {
              "description": "Indicates the account group/corresponding bank account where the transaction's funds will be allocated from the set of account groups configured in your merchant settings. If omitted, the default account group configured in your merchant settings will be used.",
              "type": "string"
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional customer parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "PaymentDetailsBase": {
      "required": [],
      "type": "object",
      "properties": {
        "ClientName": {
          "description": "Used to pass name of the client.",
          "type": "string"
        },
        "ClientPhoneNumber": {
          "description": "Used to pass phone number of the client.",
          "type": "string"
        },
        "ClientReferenceData1": {
          "description": "Used to pass a reference number such as Policy, Quote, or Claim Number.",
          "type": "string"
        },
        "ConvenienceFee": {
          "format": "decimal",
          "description": "Convenience fee amount",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "CustomerName": {
          "description": "Used to pass customer name (insured name).",
          "type": "string"
        },
        "PaymentAmount": {
          "format": "decimal",
          "description": "Payment amount",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "TimeZone": {
          "description": "TimeZone",
          "type": "string"
        },
        "TransactionDate": {
          "description": "Formatted transaction date.",
          "type": "string"
        },
        "TransactionId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "Type": {
          "description": "Name of the Payment Method Details Type",
          "type": "string",
          "readOnly": true
        },
        "ExtendedParameters": {
          "description": "The collection of key value pairs for optional customer parameters",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SaveMobileCardRequest": {
      "description": "SaveMobile parameters",
      "required": [
        "MobilePaymentToken"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "MobilePaymentToken"
          ],
          "type": "object",
          "properties": {
            "MobilePaymentToken": {
              "description": "Payment data object provided by Apple API.",
              "type": "string"
            },
            "HolderAddress": {
              "description": "Optional: Cardholder address",
              "type": "string"
            },
            "HolderZip": {
              "description": "Optional: Cardholder zip code",
              "type": "string"
            },
            "HolderName": {
              "description": "Optional: Cardholder name",
              "type": "string"
            },
            "CallbackId": {
              "description": "A callback id associated to save mobile transaction",
              "type": "string"
            },
            "DisplayName": {
              "description": "Optional: Display Name value for card, usually containing last 4 numbers.\r\nAcquired from Apple Pay PKPaymentToken object",
              "type": "string"
            },
            "ClientReferenceData": {
              "$ref": "#/definitions/ClientReferenceData",
              "description": "ClientReferenceData"
            },
            "CustomerId": {
              "description": "Client facing customer identifier",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ClientReferenceData": {
      "description": "Client or/and transaction specific data",
      "required": [],
      "type": "object",
      "properties": {
        "ClientReferenceData1": {
          "description": "Used to pass a reference number such as Policy, Quote, or Claim Number. The value will be searchable in the transaction search report.",
          "type": "string"
        },
        "ClientReferenceData2": {
          "description": "Used to pass and External TransactionId value. The value will be searchable in the transaction search report.",
          "type": "string"
        },
        "ClientReferenceData3": {
          "description": "Used to pass location data such as the office the transaction originated. The value will be searchable in the transaction search report.",
          "type": "string"
        },
        "ClientReferenceData4": {
          "description": "Used to pass additional information with the transaction. The value will be displayed in the transaction details.",
          "type": "string"
        },
        "ClientReferenceData5": {
          "description": "Used to pass additional reference source account data such as an account number for a multi-policy account.\r\nThe value will be searchable in the transaction search report.",
          "type": "string"
        }
      }
    },
    "SaveMobileCardResponse": {
      "description": "SaveMobile response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "TransactionId": {
              "description": "ProcessOne transaction ID",
              "type": "string"
            },
            "Token": {
              "description": "ProcessOne Token",
              "type": "string"
            },
            "TokenCreationTime": {
              "format": "date-time",
              "description": "Time of token creation",
              "type": "string",
              "x-nullable": true
            },
            "TimeZone": {
              "description": "Time zone of TokenCreationTime",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ChargeMobileCardRequest": {
      "description": "ChargeMobile parameters",
      "required": [
        "MobilePaymentToken"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeRequestBase"
        },
        {
          "required": [
            "MobilePaymentToken"
          ],
          "type": "object",
          "properties": {
            "MobilePaymentToken": {
              "description": "Payment data object provided by Apple API.",
              "type": "string"
            },
            "HolderAddress": {
              "description": "Optional: Cardholder address",
              "type": "string"
            },
            "HolderZip": {
              "description": "Optional: Cardholder zip code",
              "type": "string"
            },
            "HolderName": {
              "description": "Optional: Cardholder name",
              "type": "string"
            },
            "CallbackId": {
              "description": "A callback id associated to charge mobile transaction",
              "type": "string"
            },
            "DisplayName": {
              "description": "Optional: Display Name value for card, usually containing last 4 numbers",
              "type": "string"
            },
            "ChargeFee": {
              "description": "Should we charge with fee (default - true)",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "AccountGroupCode": {
              "description": "Account group code",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SelectedPaymentAmountGroup": {
      "required": [
        "PaymentAmountGroupKey",
        "UserSelectedAmount",
        "DisplayName"
      ],
      "type": "object",
      "properties": {
        "PaymentAmountGroupKey": {
          "description": "An unique key of the amount group",
          "type": "string"
        },
        "UserSelectedAmount": {
          "format": "decimal",
          "description": "Amount selected by a customer via UI.",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "DisplayName": {
          "description": "A caption that should be displayed on UI",
          "type": "string"
        },
        "AccountGroupCode": {
          "description": "This field is used to route money to different accounts based\r\non a predefined groups. If this option is used a mapping must be setup\r\nin ProcessOne before this value can be used.",
          "type": "string"
        }
      }
    },
    "AccountGroupProtectionSetting": {
      "description": "Account Group Protection Setting",
      "required": [],
      "type": "object",
      "properties": {
        "AccountGroupCode": {
          "description": "This field is used to route money to different accounts based on a predefined group. If this option is used a mapping must be set up in ProcessOne before this value can be used.",
          "type": "string"
        },
        "AccountGroupProtected": {
          "description": "Is used when a single transaction with multiple line items will have funds moved into 2 accounts. With any subsequent fund movement that happens after the original fund movement to the transaction, the Boolean refers to protecting one account over another. If omitted any subsequent fund movement will be applied at the same ratio as the original transaction.",
          "type": "boolean",
          "x-emitDefaultValue": true
        }
      }
    },
    "ChargeMobileCardResponse": {
      "description": "ChargeMobile response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AuthorizationCode": {
              "description": "A gateway Authorization Code",
              "type": "string"
            },
            "HolderName": {
              "description": "Card Holder Name",
              "type": "string"
            },
            "HolderZip": {
              "description": "Card Holder Zip code",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SaveCardRequest": {
      "description": "Save Card parameters",
      "required": [
        "Card"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SaveRequestBase"
        },
        {
          "required": [
            "Card"
          ],
          "type": "object",
          "properties": {
            "Card": {
              "$ref": "#/definitions/CardDetails",
              "description": "Card information"
            }
          }
        }
      ],
      "properties": {}
    },
    "CreditCardType": {
      "description": "Base Card type",
      "enum": [
        "Undefined",
        "Visa",
        "MasterCard",
        "AmericanExpress",
        "Discover",
        "PinlessDebitGeneric",
        "Star",
        "Nyce",
        "Pulse",
        "Other"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "CreditCardType",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "Visa",
            "value": 1
          },
          {
            "name": "MasterCard",
            "value": 2
          },
          {
            "name": "AmericanExpress",
            "value": 3
          },
          {
            "name": "Discover",
            "value": 4
          },
          {
            "name": "PinlessDebitGeneric",
            "value": 5
          },
          {
            "name": "Star",
            "value": 6
          },
          {
            "name": "Nyce",
            "value": 7
          },
          {
            "name": "Pulse",
            "value": 8
          },
          {
            "name": "Other",
            "value": 99
          }
        ]
      }
    },
    "SaveCardResponse": {
      "description": "Save card response",
      "required": [
        "BaseCardType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SaveResponseBase"
        },
        {
          "required": [
            "BaseCardType"
          ],
          "type": "object",
          "properties": {
            "BaseCardType": {
              "$ref": "#/definitions/CreditCardType"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetAcceptedCardTypesRequest": {
      "description": "GetAcceptedCardTypes operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetAcceptedCardTypesResponse": {
      "description": "GetAcceptedCardTypes operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AcceptedCardTypes": {
              "description": "Accepted card types",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ValidateBinRequest": {
      "description": "ValidateBin operation request",
      "required": [
        "CardNumber"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "CardNumber"
          ],
          "type": "object",
          "properties": {
            "CardNumber": {
              "description": "Card number",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "CreditCardNetworkType": {
      "description": "Credit Card Network type",
      "enum": [
        "Unknown",
        "Hybrid",
        "Debit",
        "Credit"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "CreditCardNetworkType",
        "values": [
          {
            "name": "Unknown",
            "value": 0
          },
          {
            "name": "Hybrid",
            "value": 1
          },
          {
            "name": "Debit",
            "value": 2
          },
          {
            "name": "Credit",
            "value": 3
          }
        ]
      }
    },
    "ValidateBinResponse": {
      "description": "ValidateBin operation response",
      "required": [
        "CreditCardNetworkType",
        "BaseCardType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "CreditCardNetworkType",
            "BaseCardType"
          ],
          "type": "object",
          "properties": {
            "CreditCardNetworkType": {
              "$ref": "#/definitions/CreditCardNetworkType"
            },
            "BaseCardType": {
              "$ref": "#/definitions/CreditCardType"
            },
            "IsPrepaidCard": {
              "description": "Flag that shows whether this card is prepaid or not",
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CreateAccountRequest": {
      "description": "CreateAccount request data",
      "required": [],
      "type": "object",
      "properties": {
        "PortalOneAuthenticationKey": {
          "description": "Authentication key",
          "type": "string"
        },
        "ExternalCustomerId": {
          "description": "An unique identifier of a customer in some external system. You can use ExternalCompanyContactId or ExternalIndividualId fields from the response by the ClaimsPay Api Account/GetInfo method.",
          "type": "string"
        },
        "CustomerName": {
          "description": "Customer name",
          "type": "string"
        }
      }
    },
    "CreateAccountResponse": {
      "description": "CreateAccount response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "CustomerId": {
              "format": "uuid",
              "description": "Generated identifier for a customer",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "SaveEftRequest": {
      "description": "Save Eft request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SaveRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "EftDetails": {
              "$ref": "#/definitions/EftDetails",
              "description": "Eft details"
            },
            "BypassBankAccountValidation": {
              "description": "Bypassing bank account validation",
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "SaveEftResponse": {
      "description": "Save Eft response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SaveResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "BankName": {
              "description": "Bank name",
              "type": "string"
            },
            "VerifyBankAccountDescription": {
              "description": "Additional response data",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "CardTokenCompatibilityType": {
      "description": "Filter by card token compatibility",
      "enum": [
        "Undefined",
        "InboundAndOutbound",
        "Inbound",
        "Outbound"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "CardTokenCompatibilityType",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "InboundAndOutbound",
            "value": 1
          },
          {
            "name": "Inbound",
            "value": 2
          },
          {
            "name": "Outbound",
            "value": 3
          }
        ]
      }
    },
    "GetPaymentMethodRequest": {
      "description": "Get payment method operation request",
      "required": [
        "CustomerId",
        "FilterByCardTokenCompatibility"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Client facing customer identifier",
          "type": "string"
        },
        "FilterByCardTokenCompatibility": {
          "$ref": "#/definitions/CardTokenCompatibilityType"
        },
        "PortalOneSessionKey": {
          "description": "Session key. Either Session key or Authentication key parameter is required",
          "type": "string"
        },
        "PortalOneAuthenticationKey": {
          "description": "Authentication key. Either Session key or Authentication key parameter is required",
          "type": "string"
        }
      }
    },
    "GetPaymentMethodResponse": {
      "description": "Get payment method operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PaymentMethods": {
              "description": "Payment methods",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethod"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "PaymentMethodType": {
      "description": "Payment method type",
      "enum": [
        "CreditCard",
        "Eft"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "PaymentMethodType",
        "values": [
          {
            "name": "CreditCard",
            "value": 0
          },
          {
            "name": "Eft",
            "value": 1
          }
        ]
      }
    },
    "PaymentMethod": {
      "description": "Payment method",
      "required": [
        "PaymentMethodType",
        "CreditCardType",
        "BankAccountType"
      ],
      "type": "object",
      "properties": {
        "PaymentMethodId": {
          "format": "int32",
          "description": "[Obsolete] Payment method identifier",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "CustomerId": {
          "format": "int32",
          "description": "[Obsolete] Customer identifier",
          "type": "integer",
          "x-nullable": true
        },
        "PolicyHashId": {
          "format": "int32",
          "description": "[Obsolete] Policy hash identifier",
          "type": "integer",
          "x-nullable": true
        },
        "PaymentMethodType": {
          "$ref": "#/definitions/PaymentMethodType"
        },
        "ProcessOneToken": {
          "description": "ProcessOne payment token",
          "type": "string"
        },
        "IsDefault": {
          "description": "Is default flag",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "CardExpirationMonth": {
          "format": "int32",
          "description": "Card expiration month",
          "type": "integer",
          "x-nullable": true
        },
        "CardExpirationYear": {
          "format": "int32",
          "description": "Card expiration year",
          "type": "integer",
          "x-nullable": true
        },
        "CustomerName": {
          "description": "Customer name",
          "type": "string"
        },
        "DateAdded": {
          "format": "date-time",
          "description": "Date when payment method was added",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "BillingZipCode": {
          "description": "ZIP Code",
          "type": "string"
        },
        "CreditCardType": {
          "$ref": "#/definitions/CreditCardType"
        },
        "BankAccountType": {
          "$ref": "#/definitions/EftAccountType"
        },
        "LastFour": {
          "description": "Last for digits",
          "type": "string"
        },
        "CardHolderAddress": {
          "description": "Card holder address",
          "type": "string"
        },
        "BankName": {
          "description": "Bank name",
          "type": "string"
        },
        "CreditCardNetworkType": {
          "$ref": "#/definitions/CreditCardNetworkType"
        },
        "IsPrepaidCard": {
          "description": "Flag that show whether the card is prepaid or not",
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "GetDefaultPaymentMethodRequest": {
      "description": "GetDefault payment method operation request",
      "required": [
        "CustomerId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "CustomerId"
          ],
          "type": "object",
          "properties": {
            "CustomerId": {
              "description": "Client facing customer identifier",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetDefaultPaymentMethodResponse": {
      "description": "GetDefault payment method operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PaymentMethod": {
              "$ref": "#/definitions/PaymentMethod",
              "description": "Default payment method"
            }
          }
        }
      ],
      "properties": {}
    },
    "SetAsDefaultPaymentMethodRequest": {
      "description": "Set default payment method operation request",
      "required": [
        "CustomerId",
        "ProcessOneToken"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "CustomerId",
            "ProcessOneToken"
          ],
          "type": "object",
          "properties": {
            "CustomerId": {
              "description": "Client facing customer identifier",
              "type": "string"
            },
            "ProcessOneToken": {
              "description": "ProcessOne payment token",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SetAsDefaultPaymentMethodResponse": {
      "description": "SetDefault payment method operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "RemovePaymentMethodRequest": {
      "description": "Delete payment method operation request",
      "required": [
        "CustomerId",
        "ProcessOneToken"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Client facing customer identifier",
          "type": "string"
        },
        "ProcessOneToken": {
          "description": "ProcessOne payment token",
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key. Either Session key or Authentication key parameter is required",
          "type": "string"
        },
        "PortalOneAuthenticationKey": {
          "description": "Authentication key. Either Session key or Authentication key parameter is required",
          "type": "string"
        }
      }
    },
    "RemovePaymentMethodResponse": {
      "description": "Delete payment method operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "TimeZone": {
              "description": "Short time zone name with daylight saving time suffix",
              "type": "string"
            },
            "TransactionDate": {
              "format": "date-time",
              "description": "Transaction date and time",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "DownloadReceiptRequest": {
      "description": "Download payment receipt request",
      "required": [],
      "type": "object",
      "properties": {
        "ReceiptId": {
          "description": "Payment receipt Id",
          "type": "string"
        },
        "ToPreview": {
          "description": "Optional: Indicates that receipt file can be opened in a browser preview",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "ExtendedParameters": {
          "description": "Custom payment properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TransactionId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "CustomerId": {
          "description": "Customer Id",
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "DownloadReceiptsRequest": {
      "description": "Download payment receipts request",
      "required": [
        "ReceiptItems"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ReceiptItems"
          ],
          "type": "object",
          "properties": {
            "ReceiptItems": {
              "description": "Receipts information",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReceiptItem"
              }
            },
            "ToPreview": {
              "description": "Optional: Indicates that receipt file can be opened in a browser preview",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ReceiptItem": {
      "description": "Download payment receipt request",
      "required": [
        "TransactionId"
      ],
      "type": "object",
      "properties": {
        "ReceiptId": {
          "description": "Payment receipt Id, optional field",
          "type": "string"
        },
        "TransactionId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "ExtendedParameters": {
          "description": "The collection of key value pairs for optional parameters",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EmailReceiptRequest": {
      "description": "Email payment receipt request",
      "required": [
        "EmailAddress"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "EmailAddress"
          ],
          "type": "object",
          "properties": {
            "EmailAddress": {
              "description": "Email address",
              "type": "string"
            },
            "ReceiptId": {
              "description": "Payment receipt Id",
              "type": "string"
            },
            "TransactionId": {
              "description": "Transaction Id",
              "type": "string"
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "EmailReceiptResponse": {
      "description": "Email operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "EmailReceiptsRequest": {
      "description": "Email payment receipts request",
      "required": [
        "ReceiptItems",
        "EmailAddress"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ReceiptItems",
            "EmailAddress"
          ],
          "type": "object",
          "properties": {
            "ReceiptItems": {
              "description": "Receipts information",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReceiptItem"
              }
            },
            "EmailAddress": {
              "description": "Email address",
              "type": "string"
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "EmailReceiptsResponse": {
      "description": "Email operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "TextMessageReceiptRequest": {
      "description": "Text Message Receipt Request",
      "required": [
        "PhoneNumber",
        "TransactionId",
        "CustomerId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PhoneNumber",
            "TransactionId",
            "CustomerId"
          ],
          "type": "object",
          "properties": {
            "PhoneNumber": {
              "description": "Phone number",
              "type": "string"
            },
            "TransactionId": {
              "description": "ProcessOne transaction ID",
              "type": "string"
            },
            "CustomerId": {
              "format": "uuid",
              "description": "Client facing customer identifier",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "TextMessageReceiptResponse": {
      "description": "Text Message Receipt Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "TextMessageReceiptsRequest": {
      "description": "Text Message Receipts Request",
      "required": [
        "PhoneNumber",
        "CustomerId",
        "ReceiptItems"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PhoneNumber",
            "CustomerId",
            "ReceiptItems"
          ],
          "type": "object",
          "properties": {
            "PhoneNumber": {
              "description": "Phone number",
              "type": "string"
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            },
            "ReceiptItems": {
              "description": "Receipts information",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReceiptItem"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "TextMessageReceiptsResponse": {
      "description": "Text Message Receipts Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CancelScheduledPaymentByPublicIdRequest": {
      "description": "Cancel Scheduled Payment operation request",
      "required": [
        "PublicId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PublicId"
          ],
          "type": "object",
          "properties": {
            "PublicId": {
              "format": "uuid",
              "description": "PublicId scheduled payment for cancellation",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CancelScheduledPaymentResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetScheduledPaymentsByCustomerIdRequest": {
      "required": [
        "PortalOneAuthenticationKey",
        "CustomerId"
      ],
      "type": "object",
      "properties": {
        "PortalOneAuthenticationKey": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "GetScheduledPaymentsByCustomerIdResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScheduledPaymentDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduledPaymentInfo"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduledPaymentInfo": {
      "required": [],
      "type": "object",
      "properties": {
        "PolicyId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "ScheduledPortalPaymentStatus": {
          "type": "string"
        },
        "ScheduledDate": {
          "format": "date-time",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "PaymentAmount": {
          "format": "decimal",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "ConvenienceFee": {
          "format": "decimal",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "TotalPaymentAmount": {
          "format": "decimal",
          "type": "number",
          "readOnly": true,
          "x-emitDefaultValue": true
        }
      }
    },
    "CreateSessionRequest": {
      "description": "Create Session parameters",
      "required": [],
      "type": "object",
      "properties": {
        "PortalOneAuthenticationKey": {
          "description": "Authentication key",
          "type": "string"
        },
        "Role": {
          "description": "User role",
          "type": "string"
        },
        "ProcessOneAuthenticationKey": {
          "description": "Unique identifier for ProcessOne Instance",
          "type": "string"
        },
        "TargetOperation": {
          "description": "Target operation for which the session is created",
          "enum": [
            "MakePayment",
            "SavePaymentMethod",
            "ManagePaymentMethods",
            "EnrollAutoPay",
            "QuickPay",
            "CsrMakePayment"
          ],
          "type": "string",
          "x-nullable": true
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Client facing customer identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000",
          "x-nullable": true
        },
        "IsPortalTestPreviewMode": {
          "description": "Flag indicates if portal will be opened in Test/Preview mode",
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "CreateSessionResponse": {
      "description": "Create Session response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PortalOneSessionKey": {
              "description": "Session key",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "RefreshSessionRequest": {
      "description": "RefreshSession request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "RefreshSessionResponse": {
      "description": "RefreshSession method response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "OpenApplePaySessionRequest": {
      "description": "Open Apple Pay session request",
      "required": [
        "ValidationUrl"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ValidationUrl"
          ],
          "type": "object",
          "properties": {
            "ValidationUrl": {
              "description": "Url received from ApplePay JS",
              "type": "string"
            },
            "DisplayName": {
              "description": "Name for displaying on the ApplePay payment sheet",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "OpenApplePaySessionResponse": {
      "description": "Open Apple Pay session response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PaymentSession": {
              "description": "Object returned from Apple Pay server which is used to open the session",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "InitializeAuthenticationSessionRequest": {
      "description": "Initialize authentication session parameters",
      "required": [
        "ClientKey",
        "LoginType"
      ],
      "type": "object",
      "properties": {
        "ClientKey": {
          "description": "Unique identifier of the client",
          "type": "string"
        },
        "LoginType": {
          "description": "Login type (Insured, Agent, Csr)",
          "type": "string"
        }
      }
    },
    "InitializeAuthenticationSessionResponse": {
      "description": "Initialize authentication session response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PortalOneSessionKey": {
              "description": "Session key",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ApiRequestBase": {
      "required": [
        "discriminator_ApiRequestBase"
      ],
      "type": "object",
      "properties": {
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        },
        "discriminator_ApiRequestBase": {
          "type": "string"
        }
      },
      "discriminator": "discriminator_ApiRequestBase"
    },
    "GetScheduledPaymentsByPaymentMethodRequest": {
      "description": "Get scheduled payments by payment method token",
      "required": [
        "Token"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Token"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "description": "Payment Method Token",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ChargeBulkCardsRequest": {
      "description": "Charge bulk Credit Cards request",
      "required": [
        "Batches"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Batches"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "description": "Saved Card token",
              "type": "string"
            },
            "Card": {
              "$ref": "#/definitions/CardDetails",
              "description": "Either Card or token parameter is required. If both are sent, token  will be used"
            },
            "ConvenienceFeeType": {
              "description": "Customizable convenience fee type that is matched with different types of transactions",
              "type": "string"
            },
            "Save": {
              "description": "Enables to save and tokenize eft information",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "IsRecurring": {
              "description": "Is recurring charge",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "Batches": {
              "description": "Batches collection",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BulkBatch"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "BulkBatch": {
      "description": "Batch information",
      "required": [
        "BatchId",
        "Records"
      ],
      "type": "object",
      "properties": {
        "BatchId": {
          "description": "Batch identifier",
          "type": "string"
        },
        "NotificationEmailAddress": {
          "description": "Email for users notifications",
          "type": "string"
        },
        "RequesterName": {
          "description": "Requester name",
          "type": "string"
        },
        "Records": {
          "description": "Batch records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkChargeRecord"
          }
        }
      }
    },
    "BulkChargeRecord": {
      "description": "Information for charging payments",
      "required": [
        "Amount"
      ],
      "type": "object",
      "properties": {
        "CallbackId": {
          "description": "Callback ID",
          "type": "string"
        },
        "Amount": {
          "format": "decimal",
          "description": "Charge amount",
          "maximum": 100000,
          "type": "number",
          "x-emitDefaultValue": true
        },
        "ChargeFee": {
          "description": "Should we charge with fee",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "AccountGroupCode": {
          "description": "Indicates the account group/corresponding bank account where the transaction's funds will be allocated from the set of account groups configured in your merchant settings. If omitted, the default account group configured in your merchant settings will be used.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Client facing customer identifier",
          "type": "string"
        },
        "ClientReferenceData": {
          "$ref": "#/definitions/ClientReferenceData",
          "description": "Client reference data"
        },
        "ExtendedParameters": {
          "description": "The collection of key value pairs for optional parameters",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DebitBulkEftRequest": {
      "description": "Debit bulk EFT request",
      "required": [
        "Batches"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Batches"
          ],
          "type": "object",
          "properties": {
            "EftDetails": {
              "$ref": "#/definitions/EftDetails",
              "description": "Eft details"
            },
            "Token": {
              "description": "Saved Eft token",
              "type": "string"
            },
            "BypassBankAccountValidation": {
              "description": "Bypassing bank account validation",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ConvenienceFeeType": {
              "description": "Customizable convenience fee type that is matched with different types of transactions",
              "type": "string"
            },
            "Save": {
              "description": "Enables to save and tokenize eft information",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "IsRecurring": {
              "description": "Is recurring charge",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "Batches": {
              "description": "Batches collection",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BulkBatch"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "CustomerSentimentAddAnswersRequest": {
      "required": [
        "ScreenFlowName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ScreenFlowName"
          ],
          "type": "object",
          "properties": {
            "ScreenFlowName": {
              "type": "string"
            },
            "ClientFacingCustomerId": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            },
            "Answers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSentimentAddAnswerRequest"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "CustomerSentimentAddAnswerRequest": {
      "required": [
        "CustomerSentimentQuestionId",
        "Answer"
      ],
      "type": "object",
      "properties": {
        "CustomerSentimentQuestionId": {
          "format": "int32",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "Answer": {
          "type": "string"
        }
      }
    },
    "CustomerSentimentQuestionListRequest": {
      "required": [
        "ScreenFlowName"
      ],
      "type": "object",
      "properties": {
        "ScreenFlowName": {
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "CustomerSentimentTrackingRequest": {
      "required": [],
      "type": "object",
      "properties": {
        "ClientFacingCustomerId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000",
          "x-nullable": true
        },
        "PolicyRefNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "LeaseAccessTokenRequest": {
      "description": "Request to lease AccessToken",
      "required": [
        "Token",
        "LeaseDate"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Token",
            "LeaseDate"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            },
            "LeaseDate": {
              "format": "date-time",
              "description": "LeaseDate",
              "type": "string",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduleCardPaymentsRequest": {
      "description": "Schedule Card payments operation request",
      "required": [
        "ScheduleCardPaymentRequests"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ScheduleCardPaymentRequests"
          ],
          "type": "object",
          "properties": {
            "ScheduleCardPaymentRequests": {
              "description": "Schedule Card payment operation requests",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleCardPaymentRequest"
              }
            },
            "AccessToken": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduleCardPaymentRequest": {
      "description": "Schedule Card payment operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ChargeFee": {
              "description": "Should we charge with fee (default - true)",
              "type": "boolean",
              "x-nullable": true
            },
            "Token": {
              "description": "Saved Card token",
              "type": "string"
            },
            "Card": {
              "$ref": "#/definitions/CardDetails",
              "description": "Either Card or token parameter is required. If both are sent, token  will be used"
            },
            "PaymentMethodId": {
              "description": "The identifier of the payment method used for this charge",
              "type": "string"
            },
            "PaymentDate": {
              "format": "date-time",
              "description": "The scheduled date of the future payment",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "PolicyId": {
              "description": "Policy Identifier in the Carrier's system",
              "type": "string"
            },
            "AccountGroupCode": {
              "description": "Account group code",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduledPaymentChangePaymentMethodRequest": {
      "required": [
        "Policies",
        "SourceToken",
        "NewToken"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Policies",
            "SourceToken",
            "NewToken"
          ],
          "type": "object",
          "properties": {
            "Policies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "SourceToken": {
              "description": "Payment Method Token",
              "type": "string"
            },
            "NewToken": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduledPaymentInfoRequest": {
      "description": "Cancel Scheduled Payment operation request",
      "required": [
        "PolicyRefNumber"
      ],
      "type": "object",
      "properties": {
        "PolicyRefNumber": {
          "description": "Policy number reference to cancel scheduled payment for",
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "ScheduleEftPaymentsRequest": {
      "description": "Schedule Eft debit operations request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScheduleEftPaymentRequests": {
              "description": "Schedule Eft debit operation requests",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleEftPaymentRequest"
              }
            },
            "AccessToken": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduleEftPaymentRequest": {
      "description": "Schedule Eft debit operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ChargeFee": {
              "description": "Should we charge with fee (default - true)",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "Token": {
              "description": "Saved Eft token",
              "type": "string"
            },
            "EftDetails": {
              "$ref": "#/definitions/EftDetails",
              "description": "Eft details"
            },
            "BypassBankAccountValidation": {
              "description": "Bypassing bank account validation",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "PaymentDate": {
              "format": "date-time",
              "description": "The scheduled date of the future payment",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "PolicyId": {
              "description": "Policy Identifier in the Carrier's system",
              "type": "string"
            },
            "AccountGroupCode": {
              "description": "Account group code",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "CancelAccessTokenRequest": {
      "description": "Request to cancel AccessToken",
      "required": [
        "Token"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Token"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CancelScheduledPaymentRequest": {
      "description": "Cancel Scheduled Payment operation request",
      "required": [
        "PolicyRefNumber"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PolicyRefNumber"
          ],
          "type": "object",
          "properties": {
            "PolicyRefNumber": {
              "description": "Policy number reference to cancel scheduled payment for",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "CustomerListRequest": {
      "required": [
        "PortalOneAuthenticationKey",
        "Top",
        "Skip"
      ],
      "type": "object",
      "properties": {
        "PortalOneAuthenticationKey": {
          "type": "string"
        },
        "Top": {
          "format": "int32",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "Skip": {
          "format": "int32",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "CustomerEmailFilterValue": {
          "type": "string"
        },
        "CustomerPhoneFilterValue": {
          "type": "string"
        },
        "CustomerNameFilterValue": {
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "GeneratePdfRequest": {
      "description": "Generate PDF document based on the text provided",
      "required": [],
      "type": "object",
      "properties": {
        "Text": {
          "description": "Text (html) to generate PDF body from",
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "AccountDetailsRequest": {
      "description": "Account Details Request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Gets or sets Customer's Account Id",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "AccountSubscriptionsRequest": {
      "description": "Account SubscriptionsRequest",
      "required": [],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Client facing customer identifier",
          "type": "string"
        },
        "AccountId": {
          "description": "Account Id",
          "type": "string"
        },
        "ExternalCustomerId": {
          "description": "External Customer Id",
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "SetScheduledPaymentEmailRequest": {
      "description": "Set Email for scheduled payment used to send information about it.",
      "required": [
        "PolicyRefNumber",
        "Email"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PolicyRefNumber",
            "Email"
          ],
          "type": "object",
          "properties": {
            "PolicyRefNumber": {
              "description": "Policy Number",
              "type": "string"
            },
            "Email": {
              "description": "Email",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GroupPaymentType": {
      "description": "Multi payment type",
      "enum": [
        "Other",
        "SplitPay",
        "MultiPay"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "GroupPaymentType",
        "values": [
          {
            "name": "Other",
            "value": 0
          },
          {
            "name": "SplitPay",
            "value": 1
          },
          {
            "name": "MultiPay",
            "value": 2
          }
        ]
      }
    },
    "ChargeCardsRequest": {
      "description": "Charge card operation request",
      "required": [
        "ChargeCardRequests",
        "GroupPaymentType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ChargeCardRequests",
            "GroupPaymentType"
          ],
          "type": "object",
          "properties": {
            "ChargeCardRequests": {
              "description": "Charge Credit card operation requests",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChargeCardRequest"
              }
            },
            "AccessToken": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            },
            "GroupPaymentType": {
              "$ref": "#/definitions/GroupPaymentType"
            }
          }
        }
      ],
      "properties": {}
    },
    "ChargeCardRequest": {
      "description": "Charge card operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ChargeFee": {
              "description": "Should we charge with fee (default - true)",
              "type": "boolean",
              "x-nullable": true
            },
            "Token": {
              "description": "Saved Card token",
              "type": "string"
            },
            "Card": {
              "$ref": "#/definitions/CardDetails",
              "description": "Either Card or token parameter is required. If both are sent, token  will be used"
            },
            "IsRecurring": {
              "description": "Is recurring charge",
              "type": "boolean",
              "x-nullable": true
            },
            "AccountGroupCode": {
              "description": "Account group code",
              "type": "string"
            },
            "CallbackId": {
              "description": "A callback id associated to charge card transaction",
              "type": "string"
            },
            "Save": {
              "description": "Enables to save and tokenize credit card information",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "PaymentMethodId": {
              "description": "The identifier of the payment method used for this charge",
              "type": "string"
            },
            "SplitPayGroupId": {
              "description": "The identifier of group for split payment",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "DebitEftsRequest": {
      "description": "Debit EFT request",
      "required": [
        "DebitEftRequests"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "DebitEftRequests"
          ],
          "type": "object",
          "properties": {
            "DebitEftRequests": {
              "description": "Debit EFT requests",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DebitEftRequest"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "DebitEftRequest": {
      "description": "Debit EFT request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EftRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Save": {
              "description": "Enables to save and tokenize eft information",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ChargeFee": {
              "description": "Should we charge with fee",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "BypassBankAccountValidation": {
              "description": "Bypassing bank account validation",
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetScreenFlowRequest": {
      "required": [
        "ScreenFlowName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ScreenFlowName"
          ],
          "type": "object",
          "properties": {
            "ScreenFlowName": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "QuickPaySignInWithPolicyRequest": {
      "description": "QuickPay Sign in Request",
      "required": [
        "SearchParameters"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "SearchParameters"
          ],
          "type": "object",
          "properties": {
            "SearchParameters": {
              "description": "Collection of Key/Value search parameters (credentials). Available parameters are configurable by merchant. For example a merchant can configure the portal to send \"policyNumber\", \"accountNumber\", \"insuredName\" fields as search parameters.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "RequestCodeRequest": {
      "description": "Request Code Request",
      "required": [
        "CommunicationOptionId",
        "CommunicationType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "CommunicationOptionId",
            "CommunicationType"
          ],
          "type": "object",
          "properties": {
            "CommunicationOptionId": {
              "description": "Communication contact (e.g. phone number)",
              "type": "string"
            },
            "CommunicationType": {
              "description": "(Email, Text, PhoneCall)",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SignUpForPhoneCallsRequest": {
      "description": "Sign Up For Phone Calls Request",
      "required": [
        "PhoneNumber",
        "IsSubscribedForPhoneCalls"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PhoneNumber",
            "IsSubscribedForPhoneCalls"
          ],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Account Id",
              "type": "string"
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            },
            "ExternalCustomerId": {
              "description": "External Customer Id",
              "type": "string"
            },
            "PhoneNumber": {
              "description": "Phone Number",
              "type": "string"
            },
            "IsSubscribedForPhoneCalls": {
              "description": "Is subscribed for Phone Calls",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "UpdateDigitalCommunicationStatus": {
              "description": "Should the status of Digital Communications Subscription been updated",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetPublishedScreenFlowsRequest": {
      "description": "GetPublishedScreenFlows operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetScreenFlowsBatchRequest": {
      "description": "GetScreenFlows operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScreenFlowNames": {
              "description": "ScreenFlow names",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetApplePaySettingsRequest": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ChangeAutoPaysPaymentMethodRequest": {
      "description": "Change Payment Method of AutoPay Enrollments operation request",
      "required": [
        "Token"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Token"
          ],
          "type": "object",
          "properties": {
            "AutoPayEnrollmentIds": {
              "description": "Collection of AutoPay Enrollment Ids which should be updated",
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            },
            "Token": {
              "description": "New  Payment Method Token",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetAccessTokenRequest": {
      "description": "Request for retrieving data by AccessToken",
      "required": [
        "Token"
      ],
      "type": "object",
      "properties": {
        "Token": {
          "format": "uuid",
          "description": "AccessToken",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000",
          "x-nullable": true
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "GetActiveAutoPayRequest": {
      "description": "GetActive AutoPay operation request",
      "required": [
        "PolicyRefNumber"
      ],
      "type": "object",
      "properties": {
        "PolicyRefNumber": {
          "description": "Policy Number",
          "type": "string"
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "GetActivePoliciesRequest": {
      "description": "Get Active Policies Request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Account Id",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetConvenienceFeesListEftRequest": {
      "description": "GetPolicyConvenienceFee for bank account operation request",
      "required": [
        "ChargeAmounts"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeesListRequestBase"
        },
        {
          "required": [
            "ChargeAmounts"
          ],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ConvenienceFeeRequestItem": {
      "required": [
        "PolicyId",
        "ChargeAmount",
        "ConvenienceFeeType"
      ],
      "type": "object",
      "properties": {
        "PolicyId": {
          "description": "policy identifier",
          "type": "string"
        },
        "PaymentMethodId": {
          "description": "The identifier of payment method used for the charge",
          "type": "string"
        },
        "ChargeAmount": {
          "format": "decimal",
          "description": "Charge amount",
          "type": "number",
          "x-nullable": true
        },
        "ConvenienceFeeType": {
          "description": "fee type",
          "type": "string"
        }
      }
    },
    "GetConvenienceFeesListCardRequest": {
      "description": "GetPolicyConvenienceFee for credit card operation request",
      "required": [
        "ChargeAmounts"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeesListRequestBase"
        },
        {
          "required": [
            "ChargeAmounts"
          ],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetConvenienceFeesListRequestBase": {
      "required": [
        "ChargeAmounts"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ChargeAmounts"
          ],
          "type": "object",
          "properties": {
            "ChargeAmounts": {
              "description": "Charge amounts",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConvenienceFeeRequestItem"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetImageByGuidRequest": {
      "description": "GetImageByGuid operation request",
      "required": [
        "ImageGuid"
      ],
      "type": "object",
      "properties": {
        "ImageGuid": {
          "format": "uuid",
          "description": "Image identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000",
          "x-nullable": true
        },
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "SignUpForEmailsRequest": {
      "description": "Sign Up For Emails Request",
      "required": [
        "Email",
        "IsSubscribedForEmails"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Email",
            "IsSubscribedForEmails"
          ],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Account Id",
              "type": "string"
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            },
            "ExternalCustomerId": {
              "description": "External Customer Id",
              "type": "string"
            },
            "Email": {
              "description": "Email",
              "type": "string"
            },
            "IsSubscribedForEmails": {
              "description": "Is subscribed for Emails",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "UpdateDigitalCommunicationStatus": {
              "description": "Should the status of Digital Communications Subscription been updated",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "SignUpForTextsRequest": {
      "description": "Sign Up For Texts Request.",
      "required": [
        "PhoneNumber",
        "IsSubscribedForTexts"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PhoneNumber",
            "IsSubscribedForTexts"
          ],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Account Id",
              "type": "string"
            },
            "CustomerId": {
              "description": "Customer Id",
              "type": "string"
            },
            "ExternalCustomerId": {
              "description": "External Customer Id",
              "type": "string"
            },
            "PhoneNumber": {
              "description": "Phone Number",
              "type": "string"
            },
            "IsSubscribedForTexts": {
              "description": "Is subscribed for Texts",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "UpdateDigitalCommunicationStatus": {
              "description": "Should the status of Digital Communications Subscription been updated",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "PaymentContext": {
      "enum": [
        "Undefined",
        "PaymentWithFee",
        "PaymentWithoutFee",
        "Recurring"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "PaymentContext",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "PaymentWithFee",
            "value": 1
          },
          {
            "name": "PaymentWithoutFee",
            "value": 2
          },
          {
            "name": "Recurring",
            "value": 3
          }
        ]
      }
    },
    "PaymentType": {
      "enum": [
        "Undefined",
        "CreditCard",
        "Eft",
        "Check",
        "Responsive"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "PaymentType",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "CreditCard",
            "value": 1
          },
          {
            "name": "Eft",
            "value": 2
          },
          {
            "name": "Check",
            "value": 3
          },
          {
            "name": "Responsive",
            "value": 4
          }
        ]
      }
    },
    "CallSource": {
      "enum": [
        "Unknown",
        "ContactOne",
        "PaymentPortal"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "CallSource",
        "values": [
          {
            "name": "Unknown",
            "value": 0
          },
          {
            "name": "ContactOne",
            "value": 1
          },
          {
            "name": "PaymentPortal",
            "value": 2
          }
        ]
      }
    },
    "SubmitPaymentRequest": {
      "required": [
        "PaymentContext",
        "PaymentType",
        "CallSource"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PaymentContext",
            "PaymentType",
            "CallSource"
          ],
          "type": "object",
          "properties": {
            "Amount": {
              "format": "decimal",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "PolicyNumber": {
              "type": "string"
            },
            "PolicyId": {
              "format": "int32",
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "PolicyZipCode": {
              "type": "string"
            },
            "PhoneNumber": {
              "type": "string"
            },
            "ProcessOneToken": {
              "type": "string"
            },
            "PaymentContext": {
              "$ref": "#/definitions/PaymentContext"
            },
            "IsRecurring": {
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ProcessOneAuthKey": {
              "type": "string"
            },
            "PaymentType": {
              "$ref": "#/definitions/PaymentType"
            },
            "CreditCardDetails": {
              "$ref": "#/definitions/CardDetails"
            },
            "EftDetails": {
              "$ref": "#/definitions/EftDetails"
            },
            "CallSource": {
              "$ref": "#/definitions/CallSource"
            },
            "AccountGroupCode": {
              "type": "string"
            },
            "CallbackId": {
              "type": "string"
            },
            "ClientRefData": {
              "$ref": "#/definitions/ClientReferenceData"
            },
            "SaveCreditCard": {
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ConvenienceFeeType": {
              "type": "string"
            },
            "ProcessOneTransactionId": {
              "type": "string"
            },
            "SaveEft": {
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "PaymentAuthorizationCode": {
              "type": "string"
            },
            "BypassBankAccountValidation": {
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "UpdateAutoPayRequest": {
      "description": "Update AutoPay operation request",
      "required": [
        "AmountPerInstallment",
        "AutoPayEnrollmentId",
        "NumberOfInstallments",
        "PaymentMethodDetails",
        "WithdrawalDay"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "AmountPerInstallment",
            "AutoPayEnrollmentId",
            "NumberOfInstallments",
            "PaymentMethodDetails",
            "WithdrawalDay"
          ],
          "type": "object",
          "properties": {
            "AmountPerInstallment": {
              "format": "decimal",
              "description": "Payment amount for each installment",
              "type": "number",
              "x-nullable": true
            },
            "AutoPayEnrollmentId": {
              "format": "int32",
              "description": "Unique identifier for AutoPay Enrollment",
              "type": "integer",
              "x-nullable": true
            },
            "ChargeFee": {
              "description": "Should we charge with fee (default - true)",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ConvenienceFeeType": {
              "description": "Customizable convenience fee type that is matched with different types of transactions",
              "type": "string"
            },
            "Email": {
              "description": "Customer email address(es). Send multiple addresses as semicolon delimited values.",
              "maxLength": 250,
              "minLength": 0,
              "type": "string"
            },
            "NumberOfInstallments": {
              "format": "int32",
              "description": "Number of installment payments to be made",
              "maximum": 300,
              "minimum": 1,
              "type": "integer",
              "x-nullable": true
            },
            "PaymentMethodDetails": {
              "$ref": "#/definitions/AutoPayPaymentMethodDetails",
              "description": "Details that will be used to define the payment method for AutoPay."
            },
            "WithdrawalDay": {
              "format": "int32",
              "description": "Specifies day of month when payments should be made",
              "maximum": 31,
              "minimum": 1,
              "type": "integer",
              "x-nullable": true
            },
            "WithdrawalFrequency": {
              "$ref": "#/definitions/WithdrawalFrequency"
            },
            "ExternalSchedulerEndpoint": {
              "description": "This field value should only be sent when autoPayEngineType = \"Carrier\".\r\nDigital Payments will then use this endpoint to eventually send user-selected Payment Preferences for Auto-Pay Plan creation and scheduling.",
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "UpdateEmailRequest": {
      "description": "Update Email Request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Account Id",
              "type": "string"
            },
            "Email": {
              "description": "Email.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "UpdatePaymentMethodRequest": {
      "description": "Update Payment Method Request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Actions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdatePaymentMethodAction"
              }
            },
            "AccountId": {
              "description": "Account Id to modify (for scenarios when privileged user makes changes on behalf of the Customer",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "UpdatePaymentMethodAction": {
      "description": "Update Payment Method Action",
      "required": [
        "PaymentMethodToken",
        "Action"
      ],
      "type": "object",
      "properties": {
        "PaymentMethodToken": {
          "description": "Payment Method Token",
          "type": "string"
        },
        "Action": {
          "description": "Action. Available Options: Created, Deleted, SetDefault, UnsetDefault",
          "type": "string"
        }
      }
    },
    "VerifyCodeRequest": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "IdentificationCode": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ChargeRequestBase": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Amount": {
              "format": "decimal",
              "description": "Charge amount",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "ClientReferenceData": {
              "$ref": "#/definitions/ClientReferenceData",
              "description": "Client reference data"
            },
            "AcknowledgmentRequired": {
              "description": "Indicates that successful payment must be acknowledged by a customer service",
              "type": "boolean",
              "x-nullable": true
            },
            "CustomerId": {
              "description": "Client facing customer identifier",
              "type": "string"
            },
            "ExtendedParameters": {
              "description": "The collection of key value pairs for optional parameters",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "AccessToken": {
              "format": "uuid",
              "description": "AccessToken",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-nullable": true
            },
            "SelectedPaymentAmountGroups": {
              "description": "Optional collection contains amounts for each amount group selected via UI.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SelectedPaymentAmountGroup"
              }
            },
            "AccountGroupProtectionSettings": {
              "description": "Is used only when the client requires one account to be protected with any subsequent fund movement that happens after the original fund movement to the transaction.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountGroupProtectionSetting"
              }
            },
            "ConvenienceFeeType": {
              "description": "Customizable convenience fee type that is matched with different types of transactions",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetAvailableScreenFlowNamesRequest": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScreenFlow": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetCurrentUserRequest": {
      "description": "GetCurrentUser operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetPortalConfigurationRequest": {
      "description": "GetPortalConfiguration operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetPortalStylesRequest": {
      "description": "Get PortalStyles request",
      "required": [],
      "type": "object",
      "properties": {
        "PortalOneSessionKey": {
          "description": "Session key",
          "type": "string"
        }
      }
    },
    "TransactionType": {
      "enum": [
        "Undefined",
        "ChargeCc",
        "RefundCc",
        "VoidCc",
        "CreditEft",
        "DebitEftNoFee",
        "VoidEft",
        "ChargeBackDebit",
        "ChargeBackCredit",
        "SaveCreditCard",
        "RemoveSavedCreditCard",
        "RecurringChargeCc",
        "ChargeCcNoFee",
        "ReturnedEft",
        "AchDebitPassthrough",
        "AchCreditPassthrough",
        "RefundEft",
        "DebitSweepForEftCredit",
        "AchReturnPassthrough",
        "SaveEft",
        "DebitEft",
        "RecurringEft",
        "RemoveSavedEft",
        "AdjustmentDebit",
        "AdjustmentCredit",
        "VoidAdjustment",
        "VerifyCreditCard",
        "VerifyBankAccount",
        "CreditBankAccount",
        "VoidBankAccountCredit",
        "CreatePrepaidProfile",
        "UpdatePrepaidProfile",
        "LoadPrepaidAccount",
        "ReversePrepaidAccountLoad",
        "ReleaseLoadPrepaidAccount",
        "DisbursePrepaidAccountEft",
        "DisbursePrepaidAccountCheck",
        "ChangePrepaidAccountStatus",
        "AddPrepaidCard",
        "ChangePrepaidCardStatus",
        "ReplacePrepaidCard",
        "ActivatePrepaidCard",
        "ReservePrepaidCard",
        "LoadReservedPrepaidCard",
        "LostStolenPrepaidCard",
        "OrderPrepaidCards",
        "ReturnedCreditBankAccount"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TransactionType",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "ChargeCc",
            "value": 1
          },
          {
            "name": "RefundCc",
            "value": 2
          },
          {
            "name": "VoidCc",
            "value": 3
          },
          {
            "name": "CreditEft",
            "value": 5
          },
          {
            "name": "DebitEftNoFee",
            "value": 6
          },
          {
            "name": "VoidEft",
            "value": 7
          },
          {
            "name": "ChargeBackDebit",
            "value": 9
          },
          {
            "name": "ChargeBackCredit",
            "value": 10
          },
          {
            "name": "SaveCreditCard",
            "value": 11
          },
          {
            "name": "RemoveSavedCreditCard",
            "value": 12
          },
          {
            "name": "RecurringChargeCc",
            "value": 13
          },
          {
            "name": "ChargeCcNoFee",
            "value": 14
          },
          {
            "name": "ReturnedEft",
            "value": 15
          },
          {
            "name": "AchDebitPassthrough",
            "value": 16
          },
          {
            "name": "AchCreditPassthrough",
            "value": 17
          },
          {
            "name": "RefundEft",
            "value": 18
          },
          {
            "name": "DebitSweepForEftCredit",
            "value": 19
          },
          {
            "name": "AchReturnPassthrough",
            "value": 20
          },
          {
            "name": "SaveEft",
            "value": 21
          },
          {
            "name": "DebitEft",
            "value": 22
          },
          {
            "name": "RecurringEft",
            "value": 23
          },
          {
            "name": "RemoveSavedEft",
            "value": 24
          },
          {
            "name": "AdjustmentDebit",
            "value": 25
          },
          {
            "name": "AdjustmentCredit",
            "value": 26
          },
          {
            "name": "VoidAdjustment",
            "value": 27
          },
          {
            "name": "VerifyCreditCard",
            "value": 28
          },
          {
            "name": "VerifyBankAccount",
            "value": 29
          },
          {
            "name": "CreditBankAccount",
            "value": 31
          },
          {
            "name": "VoidBankAccountCredit",
            "value": 32
          },
          {
            "name": "CreatePrepaidProfile",
            "value": 33
          },
          {
            "name": "UpdatePrepaidProfile",
            "value": 34
          },
          {
            "name": "LoadPrepaidAccount",
            "value": 35
          },
          {
            "name": "ReversePrepaidAccountLoad",
            "value": 36
          },
          {
            "name": "ReleaseLoadPrepaidAccount",
            "value": 37
          },
          {
            "name": "DisbursePrepaidAccountEft",
            "value": 38
          },
          {
            "name": "DisbursePrepaidAccountCheck",
            "value": 39
          },
          {
            "name": "ChangePrepaidAccountStatus",
            "value": 40
          },
          {
            "name": "AddPrepaidCard",
            "value": 41
          },
          {
            "name": "ChangePrepaidCardStatus",
            "value": 42
          },
          {
            "name": "ReplacePrepaidCard",
            "value": 43
          },
          {
            "name": "ActivatePrepaidCard",
            "value": 44
          },
          {
            "name": "ReservePrepaidCard",
            "value": 45
          },
          {
            "name": "LoadReservedPrepaidCard",
            "value": 46
          },
          {
            "name": "LostStolenPrepaidCard",
            "value": 47
          },
          {
            "name": "OrderPrepaidCards",
            "value": 48
          },
          {
            "name": "ReturnedCreditBankAccount",
            "value": 49
          }
        ]
      }
    },
    "TransactionStatus": {
      "enum": [
        "Undefined",
        "InProcess",
        "Successful",
        "Failed",
        "Voided",
        "Canceled",
        "Reversed",
        "CardReleased",
        "Returned"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TransactionStatus",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "InProcess",
            "value": 1
          },
          {
            "name": "Successful",
            "value": 2
          },
          {
            "name": "Failed",
            "value": 3
          },
          {
            "name": "Voided",
            "value": 4
          },
          {
            "name": "Canceled",
            "value": 5
          },
          {
            "name": "Reversed",
            "value": 6
          },
          {
            "name": "CardReleased",
            "value": 7
          },
          {
            "name": "Returned",
            "value": 8
          }
        ]
      }
    },
    "GetTransactionsByCustomerAndClientRefDataRequest": {
      "description": "GetTransactionsByCustomerAndClientRefData operation request",
      "required": [
        "CustomerId",
        "StartDate",
        "EndDate"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "CustomerId",
            "StartDate",
            "EndDate"
          ],
          "type": "object",
          "properties": {
            "CustomerId": {
              "description": "Customer id",
              "type": "string"
            },
            "ClientReferenceData": {
              "$ref": "#/definitions/ClientReferenceData",
              "description": "Client reference data"
            },
            "StartDate": {
              "format": "date-time",
              "description": "Start date",
              "type": "string",
              "x-nullable": true
            },
            "EndDate": {
              "format": "date-time",
              "description": "End date",
              "type": "string",
              "x-nullable": true
            },
            "Limit": {
              "format": "int32",
              "description": "Limit",
              "type": "integer",
              "x-nullable": true
            },
            "Offset": {
              "format": "int32",
              "description": "Offset",
              "type": "integer",
              "x-nullable": true
            },
            "Types": {
              "description": "Transaction types",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionType"
              }
            },
            "TransactionStatuses": {
              "description": "Transaction statuses",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionStatus"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "AcknowledgePaymentRequest": {
      "description": "AcknowledgePayment operation request",
      "required": [
        "TransactionId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "TransactionId"
          ],
          "type": "object",
          "properties": {
            "TransactionId": {
              "description": "Transaction Id",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "PolicyDetailsRequest": {
      "description": "PolicyDetails operation request",
      "required": [
        "PolicyId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PolicyId"
          ],
          "type": "object",
          "properties": {
            "PolicyId": {
              "description": "An identifier of a Policy",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "PolicySearchRequest": {
      "description": "PolicySearchRequest operation request",
      "required": [
        "PageSize",
        "PageNumber",
        "SearchParameters"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PageSize",
            "PageNumber",
            "SearchParameters"
          ],
          "type": "object",
          "properties": {
            "PageSize": {
              "format": "int32",
              "description": "The number of items to display on a page.",
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "PageNumber": {
              "format": "int32",
              "description": "The index of the current page.",
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "SortBy": {
              "description": "Defines sorting order. Only one column sorting is supported",
              "type": "string"
            },
            "SearchParameters": {
              "description": "Collection of Key/Value search parameters. Available parameters are configurable by merchant. For example a merchant can configure the portal to send \"policyNumber\", \"accountNumber\", \"insuredName\" fields as search parameters.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "DeletePaymentMethodRequest": {
      "description": "Delete payment method operation request",
      "required": [
        "PaymentMethodId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PaymentMethodId"
          ],
          "type": "object",
          "properties": {
            "PaymentMethodId": {
              "format": "int32",
              "description": "Payment method identifier",
              "type": "integer",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetEftConvenienceFeeRequest": {
      "description": "GetConvenienceFee operation request",
      "required": [
        "ChargeAmount",
        "ConvenienceFeeType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeeRequestBase"
        },
        {
          "required": [
            "ChargeAmount",
            "ConvenienceFeeType"
          ],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SetDefaultPaymentMethodRequest": {
      "description": "Set default payment method operation request",
      "required": [
        "PaymentMethodId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "PaymentMethodId"
          ],
          "type": "object",
          "properties": {
            "PaymentMethodId": {
              "format": "int32",
              "description": "Payment method identifier",
              "type": "integer",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "UpdateCardRequest": {
      "description": "Card update operation request",
      "required": [
        "Token",
        "ExpirationYear",
        "ExpirationMonth",
        "HolderZip",
        "HolderAddress"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "Token",
            "ExpirationYear",
            "ExpirationMonth",
            "HolderZip",
            "HolderAddress"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "description": "ProcessOne payment token",
              "type": "string"
            },
            "ExpirationYear": {
              "format": "int32",
              "description": "Card expiration year",
              "type": "integer",
              "x-nullable": true
            },
            "ExpirationMonth": {
              "format": "int32",
              "description": "Card expiration month",
              "type": "integer",
              "x-nullable": true
            },
            "HolderZip": {
              "description": "Card holder ZIP",
              "type": "string"
            },
            "HolderAddress": {
              "description": "Card holder address",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "CreditEftRequest": {
      "description": "Credit EFT request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EftRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "EftRequestBase": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Token": {
              "description": "Saved Eft token",
              "type": "string"
            },
            "EftDetails": {
              "$ref": "#/definitions/EftDetails",
              "description": "Eft details"
            },
            "IsRecurring": {
              "description": "Is recurring charge",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "CallbackId": {
              "description": "Callback ID",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetConvenienceFeeRequestBase": {
      "required": [
        "ChargeAmount",
        "ConvenienceFeeType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "ChargeAmount",
            "ConvenienceFeeType"
          ],
          "type": "object",
          "properties": {
            "ChargeAmount": {
              "format": "decimal",
              "description": "Charge amount",
              "type": "number",
              "x-nullable": true
            },
            "ConvenienceFeeType": {
              "description": "Convenience fee type",
              "type": "string"
            },
            "IsRecurring": {
              "description": "Get convenience fee for recurring payments?",
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetCardConvenienceFeeRequest": {
      "description": "GetConvenienceFee for credit card operation request",
      "required": [
        "ChargeAmount",
        "ConvenienceFeeType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeeRequestBase"
        },
        {
          "required": [
            "ChargeAmount",
            "ConvenienceFeeType"
          ],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetBankDataRequest": {
      "description": "GetBankData operation request",
      "required": [
        "RoutingNumber"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "RoutingNumber"
          ],
          "type": "object",
          "properties": {
            "RoutingNumber": {
              "description": "Routing number",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ValidateSessionRequest": {
      "description": "ValidateSession request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "VerifyBankAccountRequest": {
      "description": "VerifyBankAccount operation request",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "EftDetails": {
              "$ref": "#/definitions/EftDetails",
              "description": "EFT details"
            },
            "Token": {
              "description": "Saved Eft Token",
              "type": "string"
            },
            "ClientReferenceData": {
              "$ref": "#/definitions/ClientReferenceData",
              "description": "Client reference data"
            },
            "CustomerId": {
              "description": "Client facing customer identifier",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetCollectingDataStatusRequest": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "DataCollectionId": {
              "format": "uuid",
              "description": "Data collection identifier",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "StartCollectingDataRequest": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "WorkflowCode": {
              "description": "Manual Outbound workflow code to call to the customer",
              "type": "string"
            },
            "TargetPhoneNumber": {
              "description": "Target (customer) phone number",
              "type": "string"
            },
            "InitialData": {
              "description": "Initial collected data\r\nRequired data for collection:\r\n    \"CustomerName\",\r\n    \"CreditCardExpirationMonth\",\r\n    \"CreditCardExpirationYear\",\r\n    \"BillingZipCode\"",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "StopCollectingDataRequest": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "DataCollectionId": {
              "format": "uuid",
              "description": "Data collection identifier",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CancelLinkRequest": {
      "description": "Cancel Link Request",
      "required": [
        "LinkId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "LinkId"
          ],
          "type": "object",
          "properties": {
            "LinkId": {
              "description": "Link identifier",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SavePaymentMethodBaseRequest": {
      "required": [
        "CustomerId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiRequestBase"
        },
        {
          "required": [
            "CustomerId"
          ],
          "type": "object",
          "properties": {
            "CustomerId": {
              "description": "Client facing customer identifier",
              "type": "string"
            },
            "Properties": {
              "description": "Initial data for link preparation",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "SavePaymentMethodWithEmailRequest": {
      "description": "Save Payment Method With Email Request",
      "required": [
        "TargetEmail",
        "CustomerId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SavePaymentMethodBaseRequest"
        },
        {
          "required": [
            "TargetEmail",
            "CustomerId"
          ],
          "type": "object",
          "properties": {
            "TargetEmail": {
              "description": "Target email address",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SavePaymentMethodWithTextRequest": {
      "description": "Save Payment Method With Text Request",
      "required": [
        "TargetPhoneNumber",
        "CustomerId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SavePaymentMethodBaseRequest"
        },
        {
          "required": [
            "TargetPhoneNumber",
            "CustomerId"
          ],
          "type": "object",
          "properties": {
            "TargetPhoneNumber": {
              "description": "Target phone number",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ApiResponseBase": {
      "required": [
        "discriminator_ApiResponseBase"
      ],
      "type": "object",
      "properties": {
        "ResponseCode": {
          "description": "Operation response code",
          "type": "string"
        },
        "ResponseMessage": {
          "description": "Response message",
          "type": "string"
        },
        "discriminator_ApiResponseBase": {
          "type": "string"
        }
      },
      "discriminator": "discriminator_ApiResponseBase"
    },
    "GetScheduledPaymentsByPaymentMethodResponse": {
      "description": "Get scheduled payments by payment method token",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Payments": {
              "description": "List of scheduled payments of requested payment method",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduledPortalPaymentInfo"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ScheduledPortalPaymentInfo": {
      "required": [],
      "type": "object",
      "properties": {
        "PolicyRefNumber": {
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "ScheduledPaymentDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduledPaymentDetail"
          }
        }
      }
    },
    "ScheduledPaymentDetail": {
      "required": [],
      "type": "object",
      "properties": {
        "PaymentType": {
          "type": "string"
        },
        "ProcessingFee": {
          "format": "decimal",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "PaymentAmount": {
          "format": "decimal",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "TotalScheduledAmount": {
          "format": "decimal",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "TokenCreditCardInfo": {
          "$ref": "#/definitions/TokenCreditCardInfo"
        },
        "TokenEftInfo": {
          "$ref": "#/definitions/TokenEftInfo"
        },
        "ProcessOneToken": {
          "type": "string"
        }
      }
    },
    "TokenCreditCardInfo": {
      "description": "Credit Card tokenized data",
      "required": [
        "Type",
        "BaseCardType",
        "CreditCardNetworkType",
        "CardTokenCompatibility"
      ],
      "type": "object",
      "properties": {
        "LastFourDigits": {
          "description": "Last 4 digits of credit card number",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/CreditCardType"
        },
        "ExpirationYear": {
          "format": "int32",
          "description": "Year of the expiration of the credit card",
          "type": "integer",
          "x-nullable": true
        },
        "ExpirationMonth": {
          "format": "int32",
          "description": "Month of the expiration of the credit card",
          "type": "integer",
          "x-nullable": true
        },
        "Holder": {
          "$ref": "#/definitions/Customer",
          "description": "Card holder"
        },
        "BaseCardType": {
          "$ref": "#/definitions/CreditCardType"
        },
        "CreditCardNetworkType": {
          "$ref": "#/definitions/CreditCardNetworkType"
        },
        "IsPrepaidCard": {
          "description": "Flag that shows whether this card is prepaid or not",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "CardTokenCompatibility": {
          "$ref": "#/definitions/CardTokenCompatibilityType"
        }
      }
    },
    "TokenEftInfo": {
      "description": "Eft tokenized data",
      "required": [
        "Type"
      ],
      "type": "object",
      "properties": {
        "RoutingNumber": {
          "description": "The bank routing number. Must only contain numbers.",
          "type": "string"
        },
        "LastFourDigits": {
          "description": "Last 4 digits of account number",
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/EftAccountType"
        },
        "CustomerName": {
          "description": "Customer name",
          "type": "string"
        },
        "BankName": {
          "description": "Bank name",
          "type": "string"
        }
      }
    },
    "ChargeBulkCardsResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "DebitBulkEftResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CustomerSentimentAddAnswersResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CustomerSentimentAddTrackingResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CustomerSentimentQueryTrackingResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ShowQuestions": {
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CustomerSentimentQuestionListResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSentimentQuestion"
              }
            },
            "Total": {
              "format": "int32",
              "type": "integer",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CustomerSentimentQuestion": {
      "required": [],
      "type": "object",
      "properties": {
        "CustomerSentimentQuestionId": {
          "format": "int32",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "ResponseType": {
          "format": "int32",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "ScreenFlows": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        },
        "AvailableOptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsNps": {
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "Created": {
          "format": "date-time",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "LastUpdated": {
          "format": "date-time",
          "type": "string",
          "x-emitDefaultValue": true
        }
      }
    },
    "CustomerSentimentTrackingResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetBankAccountInfoForProcessingResponse": {
      "description": "GetBankAccountInfoForProcessingResponse response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AccountNumber": {
              "description": "Account number",
              "type": "string"
            },
            "RoutingNumber": {
              "description": "Routing number",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetBillDetailsResponse": {
      "description": "Get Bill Details response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AgencyBillDetailsResponse"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "AgencyBillDetailsResponse": {
      "required": [
        "PolicyId",
        "PolicyNumber",
        "Status",
        "AmountDue",
        "PaymentAllowed",
        "Properties"
      ],
      "type": "object",
      "properties": {
        "PolicyId": {
          "description": "An identifier of a Policy",
          "type": "string"
        },
        "PolicyNumber": {
          "description": "Policy Number",
          "type": "string"
        },
        "Status": {
          "description": "Bill status",
          "type": "string"
        },
        "AmountDue": {
          "format": "decimal",
          "description": "An amount due of bill",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "PaymentAllowed": {
          "description": "Is payment allowed",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "Properties": {
          "description": "Bill properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "AccountGroupCode": {
          "description": "Indicates the account group/corresponding bank account where the transaction's funds will be allocated from the set of account groups configured in your merchant settings. If omitted, the default account group configured in your merchant settings will be used.",
          "type": "string"
        }
      }
    },
    "GetCreditCardInfoForEpxProcessingResponse": {
      "description": "GetCreditCardInfoForEpxProcessingResponse response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "EPXToken": {
              "description": "EPXToken",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "LeaseAccessTokenResponse": {
      "description": "Response of the LeaseAccessToken operation",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ScheduledPaymentChangePaymentMethodResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ScheduledPaymentInfoResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PolicyRefNumber": {
              "type": "string"
            },
            "PaymentDate": {
              "format": "date-time",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "ScheduledPaymentDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduledPaymentDetail"
              }
            },
            "PublicId": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "SearchAgencyBillsResponse": {
      "description": "Search Agency Bills response",
      "required": [
        "TotalResultsNumber",
        "Results"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "TotalResultsNumber",
            "Results"
          ],
          "type": "object",
          "properties": {
            "TotalResultsNumber": {
              "format": "int32",
              "description": "Total found bills number",
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "Results": {
              "description": "Agency bills array",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchResultRow"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "SearchResultRow": {
      "description": "Search Result Row",
      "required": [
        "Id",
        "Properties"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Row Id",
          "type": "string"
        },
        "Properties": {
          "description": "Search Result Row Properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CancelAccessTokenResponse": {
      "description": "Response of the CancelAccessToken operation",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CustomerListResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerInsured"
              }
            },
            "Total": {
              "format": "int32",
              "type": "integer",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "CustomerInsured": {
      "required": [],
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        }
      }
    },
    "AccountDetailsResponse": {
      "description": "Account Details Response",
      "required": [
        "AccountId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "AccountId"
          ],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Gets or sets Customer's Account Id",
              "type": "string"
            },
            "FirstName": {
              "description": "Gets or sets Customer's First Name",
              "type": "string"
            },
            "LastName": {
              "description": "Gets or sets Customer's Last Name",
              "type": "string"
            },
            "AgentLink": {
              "description": "Gets or sets the External link to the Customer's Agent Contact page",
              "type": "string"
            },
            "TimeZone": {
              "description": "Gets or sets Customer's Time Zone in Olson/IANA format (e.g. America/Los_Angeles). If not specified, the portal setting will be used.",
              "type": "string"
            },
            "Phones": {
              "description": "Account phones collection",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Phone"
              }
            },
            "Email": {
              "description": "Gets or sets Customer's Email address",
              "type": "string"
            },
            "Addresses": {
              "description": "Gets or sets Customer's Address",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            },
            "Properties": {
              "description": "Generic Key/Value Property list",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "Phone": {
      "description": "Phone Details",
      "required": [
        "Type",
        "Number",
        "IsPreferredPhoneNumber"
      ],
      "type": "object",
      "properties": {
        "Type": {
          "description": "Phone Type",
          "type": "string"
        },
        "Number": {
          "description": "Phone Number",
          "type": "string"
        },
        "Extension": {
          "description": "Extension",
          "type": "string"
        },
        "IsPreferredPhoneNumber": {
          "description": "Indicates whether to use this phone as a primary contact",
          "type": "boolean",
          "x-emitDefaultValue": true
        }
      }
    },
    "Address": {
      "description": "Address Details",
      "required": [
        "StreetAddress",
        "City",
        "State",
        "ZipCode",
        "Country"
      ],
      "type": "object",
      "properties": {
        "StreetAddress": {
          "description": "Street Address",
          "type": "string"
        },
        "City": {
          "description": "City",
          "type": "string"
        },
        "State": {
          "description": "State",
          "type": "string"
        },
        "ZipCode": {
          "description": "Zip Code",
          "type": "string"
        },
        "Country": {
          "description": "Country",
          "type": "string"
        }
      }
    },
    "AccountSubscriptionsResponse": {
      "description": "AccountSubscriptions response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "DigitalCommunicationStatus": {
              "description": "Subscription status: Subscribed or Unsubscribed",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "Subscriptions": {
              "description": "List of subscriptions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountSubscription"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "AccountSubscriptionType": {
      "description": "Subscription Type",
      "enum": [
        "Undefined",
        "Email",
        "Text",
        "Paperless",
        "PhoneCall"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "AccountSubscriptionType",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "Email",
            "value": 1
          },
          {
            "name": "Text",
            "value": 2
          },
          {
            "name": "Paperless",
            "value": 3
          },
          {
            "name": "PhoneCall",
            "value": 4
          }
        ]
      }
    },
    "AccountSubscriptionStatus": {
      "description": "Subscription Status",
      "enum": [
        "Undefined",
        "Requested",
        "Subscribed",
        "Unsubscribed"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "AccountSubscriptionStatus",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "Requested",
            "value": 1
          },
          {
            "name": "Subscribed",
            "value": 2
          },
          {
            "name": "Unsubscribed",
            "value": 3
          }
        ]
      }
    },
    "AccountSubscription": {
      "description": "Account subscription",
      "required": [
        "Type",
        "Status"
      ],
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/AccountSubscriptionType"
        },
        "Status": {
          "$ref": "#/definitions/AccountSubscriptionStatus"
        },
        "Details": {
          "description": "Details",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AddPaymentMethodResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ScheduledPaymentResponse": {
      "description": "Response for Scheduled payment operations",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SetScheduledPaymentEmailResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "VerifyCredentialsResponse": {
      "description": "VerifyCredentialsResponse represents authentication way for user: one-factor or two-factor authentication.\r\nAccountId is used to identify user.\r\nIf TwoFactor flag is equals true, response ought to contain ContactOptions data to continue authentication successfully.",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Account Id",
              "type": "string"
            },
            "TwoFactor": {
              "description": "TwoFactor provides which authentication scenario should be started.\r\nTrue value is for two-factor, False is for one-factor authorization.",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ContactOptions": {
              "description": "ContactOptions contains a collection of ContactOption.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactOption"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ContactOption": {
      "description": "Contact Option contains data for communication with user to continue authentication using this for second factor authentication.\r\nIt contains communication method type and communication method value.",
      "required": [],
      "type": "object",
      "properties": {
        "ContactOptionMethod": {
          "description": "ContactOptionMethod provides type of communication method. Supported methods: \"Phone\", \"Email\".",
          "type": "string"
        },
        "ContactOptionValue": {
          "description": "CommunicationOptionValue contains user's email or phone number to send or to tell confirmation code.",
          "type": "string"
        }
      }
    },
    "ChargeCardsResponse": {
      "description": "Charge Cards operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ChargeCardResponses": {
              "description": "Charge Credit card operation responses",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChargeCardResponse"
              }
            },
            "ReceiptId": {
              "description": "Receipt Id for all payments",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ChargeCardResponse": {
      "description": "Charge Card operation response",
      "required": [
        "BaseCardType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeResponseBase"
        },
        {
          "required": [
            "BaseCardType"
          ],
          "type": "object",
          "properties": {
            "Token": {
              "description": "ProcessOne payment token",
              "type": "string"
            },
            "AuthorizationCode": {
              "description": "A gateway Authorization Code",
              "type": "string"
            },
            "CreditCardType": {
              "$ref": "#/definitions/CreditCardType"
            },
            "HolderName": {
              "description": "Card Holder Name",
              "type": "string"
            },
            "HolderZip": {
              "description": "Card Holder Zip code",
              "type": "string"
            },
            "BaseCardType": {
              "$ref": "#/definitions/CreditCardType"
            },
            "PaymentMethodId": {
              "description": "The identifier of the payment method used for this charge",
              "type": "string"
            },
            "LastFour": {
              "description": "Last four numbers of Credit Card",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "DebitEftsResponse": {
      "description": "Eft debit response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "DebitEftResponses": {
              "description": "Debit EFT responses",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DebitEftResponse"
              }
            },
            "ReceiptId": {
              "description": "Receipt Id for all payments",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "DebitEftResponse": {
      "description": "Eft debit response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EftResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Token": {
              "description": "ProcessOne payment token",
              "type": "string"
            },
            "VerifyBankAccountDescription": {
              "description": "Additional response data",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "DownloadReceiptsResponse": {
      "description": "Get Receipts response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "FileContent": {
              "format": "byte",
              "description": "Receipts file content",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetScreenFlowResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScreenFlow": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "QuickPaySignInWithPolicyResponse": {
      "description": "QuickPay Sign in Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Results": {
              "description": "List of policies matching the search criteria",
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuickPayPolicySearchResult"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "QuickPayPolicySearchResult": {
      "description": "QuickPay policy search result",
      "required": [],
      "type": "object",
      "properties": {
        "PolicyId": {
          "description": "Policy Identifier",
          "type": "string"
        },
        "PolicyNumber": {
          "description": "Policy Number",
          "type": "string"
        },
        "CustomerId": {
          "description": "ONE Inc customer identifier that will be used to fetch available payment methods",
          "type": "string"
        },
        "ExternalCustomerId": {
          "description": "External generated ID of Customer",
          "type": "string"
        },
        "CustomerName": {
          "description": "Name of the customer",
          "type": "string"
        },
        "AccountId": {
          "description": "Account Identifier",
          "type": "string"
        },
        "Status": {
          "description": "Policy Status",
          "type": "string"
        },
        "Term": {
          "description": "Policy Term",
          "type": "string"
        },
        "Type": {
          "description": "Line Of Business Type. Supported values: Automobile, Homeowner, Workers Comp, Other",
          "type": "string"
        },
        "Premium": {
          "format": "decimal",
          "description": "Policy Premium",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "DueDate": {
          "format": "date-time",
          "description": "Expiration Date of the policy",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "RemainingBalance": {
          "format": "decimal",
          "description": "Remaining Balance",
          "type": "number",
          "x-nullable": true
        },
        "MinimumAmountDue": {
          "format": "decimal",
          "description": "Minimum Amount Due",
          "type": "number",
          "x-nullable": true
        },
        "OtherAmountAllowed": {
          "description": "Other Amount Allowed",
          "type": "boolean",
          "x-nullable": true
        },
        "PaymentsAreAllowed": {
          "description": "Payments Are Allowed for the policy",
          "type": "boolean",
          "x-nullable": true
        },
        "IsAutoPayEnabled": {
          "description": "Is AutoPay Enabled for the policy",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "ZipCode": {
          "description": "Policy Zip Code",
          "type": "string"
        },
        "FeeContext": {
          "description": "Indicates whether a fee will be applied to the payment. Supported values: PaymentWithFee, PaymentWithoutFee.\r\nOptional.",
          "type": "string"
        },
        "ConvenienceFeeType": {
          "description": "Provides the Type of Convenience Service Fee. (Default, Waive Fee, New Business, etc.)\r\nOptional.",
          "type": "string"
        },
        "Documents": {
          "description": "Collection of policy documents (Proof of insurance document details)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentDetails"
          }
        },
        "Bills": {
          "description": "Collection of policy bills",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillDetails"
          }
        },
        "AutoPayOptions": {
          "description": "Collection of possible recurring payment options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrequencyDetails"
          }
        },
        "PolicyDetails": {
          "$ref": "#/definitions/PolicyDetailsBase",
          "description": "PolicyDetails"
        },
        "InstallmentPlanEngineType": {
          "$ref": "#/definitions/AutoPayEngineType"
        },
        "ExternalSchedulerEndpoint": {
          "description": "This field value should only be sent when autoPayEngineType = \"Carrier\".\r\nDigital Payments will then use this endpoint to eventually send user-selected Payment Preferences for Auto-Pay Plan creation and scheduling.",
          "type": "string"
        },
        "PaymentAmountGroups": {
          "description": "Optional collection of available payment amount types.\r\nContains information about each payment amount type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentAmountGroup"
          }
        },
        "AccountGroupProtectionSettings": {
          "description": "Is used only when the client requires one account to be protected with any subsequent fund movement that happens after the original fund movement to the transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountGroupProtectionSetting"
          }
        },
        "AcceptCreditCards": {
          "description": "Indicates whether it is permitted to use Credit Cards for payments.",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "AcceptPrepaidCards": {
          "description": "Indicates whether it is permitted to use Prepaid Cards for payments.",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "AccountGroupCode": {
          "description": "Indicates the account group/corresponding bank account where the transaction's funds will be allocated from the set of account groups configured in your merchant settings. If omitted, the default account group configured in your merchant settings will be used.",
          "type": "string"
        },
        "IsScheduledPayEnabled": {
          "description": "Is ability to schedule one-time scheduled payment enabled for the policy.",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "FinalPayDate": {
          "format": "date-time",
          "description": "The latest date in future allowable for payment date to be scheduled on.",
          "type": "string",
          "x-emitDefaultValue": true
        }
      }
    },
    "DocumentDetails": {
      "description": "Document Details",
      "required": [],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Document Id",
          "type": "string"
        },
        "Type": {
          "description": "Document Type (e.g. ProofOfInsurance)",
          "type": "string"
        },
        "LinkToDownload": {
          "description": "LinkToDownload to download the document (proof of insurance)",
          "type": "string"
        }
      }
    },
    "BillDetails": {
      "description": "Bill Details",
      "required": [],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Bill Id",
          "type": "string"
        },
        "DocumentId": {
          "description": "Document Id",
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "description": "Date",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Amount": {
          "format": "decimal",
          "description": "Amount",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "LinkToDownload": {
          "description": "Link to download the bill",
          "type": "string"
        }
      }
    },
    "FrequencyDetails": {
      "description": "Frequency type: Monthly, Quarterly, Semiannually, Annually",
      "required": [],
      "type": "object",
      "properties": {
        "Frequency": {
          "description": "Frequency type: Monthly, Quarterly, Semiannually, Annually",
          "type": "string"
        },
        "Amount": {
          "format": "decimal",
          "description": "Payment amount for each installment",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "NumberOfInstallments": {
          "format": "int32",
          "description": "Number of total installments",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "WithdrawalDates": {
          "description": "Available dates fo withdrawal",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "PolicyDetailsBase": {
      "description": "Base class for the different Types of Policies",
      "required": [
        "Type"
      ],
      "type": "object",
      "properties": {
        "Type": {
          "description": "Name of the Policy Details Type, like \"Auto\", \"Home\", \"Other\", \"WorkersComp\"",
          "type": "string"
        },
        "Properties": {
          "description": "Generic Key/Value Property list",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "Type"
    },
    "AmountContextDefault": {
      "description": "The value specifies what amount type (MinimumAmountDue, RemainingBalance or OtherAmount) should be selected by default in this group.",
      "enum": [
        "MinimumAmountDue",
        "RemainingBalance",
        "OtherAmount"
      ],
      "type": "string",
      "x-nullable": true,
      "x-ms-enum": {
        "name": "AmountContextDefault",
        "values": [
          {
            "name": "MinimumAmountDue",
            "value": 0
          },
          {
            "name": "RemainingBalance",
            "value": 1
          },
          {
            "name": "OtherAmount",
            "value": 2
          }
        ]
      }
    },
    "PaymentAmountGroup": {
      "required": [
        "Key",
        "DisplayName",
        "MinimumAmountDue"
      ],
      "type": "object",
      "properties": {
        "Key": {
          "description": "An unique key of the amount group",
          "type": "string"
        },
        "DisplayName": {
          "description": "a caption that should be displayed on UI",
          "type": "string"
        },
        "MinimumAmountDue": {
          "format": "decimal",
          "description": "The minimum amount that is due for a policy. Must be greater than zero.",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "DisplayOrder": {
          "format": "int32",
          "description": "Display order of Payment Types on the window.",
          "type": "integer",
          "x-nullable": true
        },
        "RemainingBalance": {
          "format": "decimal",
          "description": "The outstanding balance for the amount group.",
          "type": "number",
          "x-nullable": true
        },
        "OtherAmountAllowed": {
          "description": "Indicates if a customer can provide any amount between MinimumAmountDue and RemainingBalance",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "IsRequired": {
          "description": "Specifies that a customer cannot submit a payment until some amount in this group is selected",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "AccountGroupCode": {
          "description": "This AccountGroupCode is used to route money to different accounts based on a predefined group. If this option is used a mapping must be set up in ProcessOne before this value can be used.",
          "type": "string"
        },
        "AmountContextDefault": {
          "$ref": "#/definitions/AmountContextDefault"
        }
      }
    },
    "RequestCodeResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SignUpForPhoneCallsResponse": {
      "description": "Sign Up For Phone Calls Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ValidateCustomerIdForSessionResponse": {
      "description": "validate customer id for session response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ErrorDescription": {
              "type": "string"
            },
            "IsValid": {
              "type": "boolean",
              "readOnly": true,
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetPublishedScreenFlowsResponse": {
      "description": "This operation returns published screenflows for portal.",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScreenFlows": {
              "description": "ScreenFlows",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetScreenFlowsBatchResponse": {
      "description": "This operation returns screen flow for requested operation in portal.",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScreenFlows": {
              "description": "ScreenFlows",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetApplePaySettingsResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "IsEnabled": {
              "description": "Is ApplePay processing enabled",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "MerchantIdentifier": {
              "description": "Merchant identifier as",
              "type": "string"
            },
            "CountryCode": {
              "description": "Country code",
              "type": "string"
            },
            "CurrencyCode": {
              "description": "Currency code",
              "type": "string"
            },
            "MerchantDisplayName": {
              "description": "Display name shown in the ApplePay payment information",
              "type": "string"
            },
            "SupportedNetworks": {
              "description": "Supported card networks for ApplePay",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "MerchantCapabilities": {
              "description": "ApplePay merchant capabilities",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ChangeAutoPaysPaymentMethodResponse": {
      "description": "Change Payment Method of AutoPay Enrollments operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetAccessTokenResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Status": {
              "type": "string"
            },
            "Payload": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetActiveAutoPayResponse": {
      "description": "GetActive AutoPay operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "AutoPayEnrollment": {
              "$ref": "#/definitions/AutoPayEnrollment",
              "description": "AutoPay Enrollment"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetActivePoliciesResponse": {
      "description": "Get Active Policies Response",
      "required": [
        "Policies"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "Policies"
          ],
          "type": "object",
          "properties": {
            "Policies": {
              "description": "Collection of Policies",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyDetailsResponse"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "PolicyDetailsResponse": {
      "description": "PolicyDetails response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PolicyId": {
              "description": "Policy Identifier",
              "type": "string"
            },
            "PolicyNumber": {
              "description": "Policy Number",
              "type": "string"
            },
            "Status": {
              "description": "Policy Status",
              "type": "string"
            },
            "Term": {
              "description": "Policy Term",
              "type": "string"
            },
            "Type": {
              "description": "Line Of Business Type. Supported values: Automobile, Homeowner, Workers Comp, Other",
              "type": "string"
            },
            "Premium": {
              "format": "decimal",
              "description": "Policy Premium",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "DueDate": {
              "format": "date-time",
              "description": "Expiration Date of the policy",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "RemainingBalance": {
              "format": "decimal",
              "description": "Remaining Balance",
              "type": "number",
              "x-nullable": true
            },
            "MinimumAmountDue": {
              "format": "decimal",
              "description": "Minimum Amount Due",
              "type": "number",
              "x-nullable": true
            },
            "OtherAmountAllowed": {
              "description": "Other Amount Allowed",
              "type": "boolean",
              "x-nullable": true
            },
            "PaymentsAreAllowed": {
              "description": "Payments Are Allowed",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "IsAutoPayEnabled": {
              "description": "Is AutoPay Enabled",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ZipCode": {
              "description": "Policy Zip Code",
              "type": "string"
            },
            "FeeContext": {
              "description": "Indicates whether a fee will be applied to the payment. Supported values: PaymentWithFee, PaymentWithoutFee.\r\nOptional.",
              "type": "string"
            },
            "ConvenienceFeeType": {
              "description": "Provides the Type of Convenience Service Fee. (Default, Waive Fee, New Business, etc.)\r\nOptional.",
              "type": "string"
            },
            "AccountGroupCode": {
              "description": "Indicates the account group/corresponding bank account where the transaction's funds will be allocated from the set of account groups configured in your merchant settings. If omitted, the default account group configured in your merchant settings will be used.",
              "type": "string"
            },
            "Documents": {
              "description": "Collection of policy documents (Proof of insurance document details)",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentDetails"
              }
            },
            "Bills": {
              "description": "Collection of policy bills",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillDetails"
              }
            },
            "AutoPayOptions": {
              "description": "Collection of possible recurring payment options",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FrequencyDetails"
              }
            },
            "PolicyDetails": {
              "$ref": "#/definitions/PolicyDetailsBase",
              "description": "PolicyDetails"
            },
            "IsAutoPayEnrolled": {
              "description": "Is AutoPay Enrolled",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "IsAutoPayEnrollmentOwner": {
              "description": "Is AutoPay Enrollment owner",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "NextWithdrawalDate": {
              "format": "date-time",
              "description": "Next withdrawal date for AutoPay",
              "type": "string",
              "x-nullable": true
            },
            "InstallmentPlanEngineType": {
              "$ref": "#/definitions/AutoPayEngineType"
            },
            "ExternalSchedulerEndpoint": {
              "description": "This field value should only be sent when autoPayEngineType = \"Carrier\".\r\nDigital Payments will then use this endpoint to eventually send user-selected Payment Preferences for Auto-Pay Plan creation and scheduling.",
              "type": "string"
            },
            "PaymentAmountGroups": {
              "description": "Optional collection of available payment amount types.\r\nContains information about each payment amount type.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentAmountGroup"
              }
            },
            "AccountGroupProtectionSettings": {
              "description": "Is used only when the client requires one account to be protected with any subsequent fund movement that happens after the original fund movement to the transaction.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountGroupProtectionSetting"
              }
            },
            "IsScheduledPayEnabled": {
              "description": "Is ability to schedule one-time scheduled payment enabled for the policy.",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "FinalPayDate": {
              "format": "date-time",
              "description": "The latest date in future allowable for payment date to be scheduled on.",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "IsPaymentScheduled": {
              "description": "Shows if payment have been scheduled already.",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ScheduledPaymentDate": {
              "format": "date-time",
              "description": "Scheduled payment day, day customer will be charged for the policy.",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "IsScheduledPaymentOwner": {
              "description": "Is Scheduled payment owner",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "ScheduledPaymentFee": {
              "format": "decimal",
              "description": "Fee for scheduled payment",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "AcceptCreditCards": {
              "description": "Indicates whether Credit Card can be used for payment.",
              "type": "boolean",
              "x-emitDefaultValue": true
            },
            "AcceptPrepaidCards": {
              "description": "Indicates whether it is permitted to use Prepaid Cards for payments.",
              "type": "boolean",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetConvenienceFeesListEftResponse": {
      "description": "GetConvenienceFeesList operation response for bank account",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeesListResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ConvenienceFeeResult": {
      "required": [],
      "type": "object",
      "properties": {
        "PolicyId": {
          "description": "Policy identifier",
          "type": "string"
        },
        "PaymentMethodId": {
          "description": "The identifier of payment method used for the charge",
          "type": "string"
        },
        "ConvenienceFee": {
          "format": "decimal",
          "description": "Convenience fee amount",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "CalculationType": {
          "description": "Calculation type",
          "type": "string"
        },
        "FlatRate": {
          "format": "decimal",
          "description": "Flat rate",
          "type": "number",
          "x-nullable": true
        },
        "Percent": {
          "format": "decimal",
          "description": "Percent",
          "type": "number",
          "x-nullable": true
        },
        "MinimumAmount": {
          "format": "decimal",
          "description": "Minimum amount",
          "type": "number",
          "x-nullable": true
        }
      }
    },
    "GetConvenienceFeesListResponseBase": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "FeesList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConvenienceFeeResult"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetConvenienceFeesListCardResponse": {
      "description": "GetConvenienceFeesList operation response for credit card",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeesListResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetImageByGuidResponse": {
      "description": "GetImage operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "FileContent": {
              "format": "byte",
              "description": "Image file content",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SignUpForEmailsResponse": {
      "description": "Sign Up For Emails Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SignUpForTextsResponse": {
      "description": "Sign Up For Texts Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SubmitPaymentResponse": {
      "required": [
        "CreditCardType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "CreditCardType"
          ],
          "type": "object",
          "properties": {
            "ProcessOneTransactionId": {
              "type": "string"
            },
            "ProcessOneTransactionDateTime": {
              "format": "date-time",
              "type": "string",
              "x-emitDefaultValue": true
            },
            "ProcessOneBatchNumber": {
              "format": "int32",
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "ProcessOneAuthorizationCode": {
              "type": "string"
            },
            "ProcessOneBankName": {
              "type": "string"
            },
            "ProcessOneTimeZone": {
              "type": "string"
            },
            "ProcessOneToken": {
              "type": "string"
            },
            "BankAccountValidationDescription": {
              "type": "string"
            },
            "CreditCardType": {
              "$ref": "#/definitions/CreditCardType"
            }
          }
        }
      ],
      "properties": {}
    },
    "SignOutResponse": {
      "description": "Sign Out Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "UpdateAutoPayResponse": {
      "description": "Update AutoPay Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Token": {
              "description": "Saved payment method token that is used for the remaining installment payments.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "UpdateEmailResponse": {
      "description": "Sign Up For Email Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "UpdatePaymentMethodResponse": {
      "description": "Update Payment Method Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "DataContracts.UserDetailsResponse": {
      "description": "User Details Response",
      "required": [
        "AccountId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "AccountId"
          ],
          "type": "object",
          "properties": {
            "AccountId": {
              "description": "Gets or sets Customer's Account Id",
              "type": "string"
            },
            "CustomerId": {
              "description": "Gets or sets Customer's Customer Id",
              "type": "string"
            },
            "FirstName": {
              "description": "Gets or sets Customer's First Name",
              "type": "string"
            },
            "LastName": {
              "description": "Gets or sets Customer's Last Name",
              "type": "string"
            },
            "Roles": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "Permissions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "UserFriendlyMessage": {
              "description": "User Friendly Message. This message can be used to display information about a problem that occurred during user authorization.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "VerifyCodeResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ChargeResponseBase": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "TransactionId": {
              "description": "Transaction ID",
              "type": "string"
            },
            "TransactionDate": {
              "format": "date-time",
              "description": "Transaction date and time",
              "type": "string",
              "x-nullable": true
            },
            "TimeZone": {
              "description": "Transaction time zone",
              "type": "string"
            },
            "BatchNumber": {
              "format": "int32",
              "description": "Number of the batch",
              "type": "integer",
              "x-emitDefaultValue": true
            },
            "ReceiptId": {
              "description": "Receipt ID",
              "type": "string"
            },
            "AcknowledgmentDelivered": {
              "description": "Indicates that successful payment has been acknowledged by a customer service",
              "type": "boolean",
              "x-nullable": true
            },
            "ClientReferenceData1": {
              "description": "Reference number such as Policy, Quote, or Claim Number for which payment is made.",
              "type": "string"
            },
            "OriginalAmount": {
              "format": "decimal",
              "description": "Original amount of the transaction",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "FeeAmount": {
              "format": "decimal",
              "description": "Fee amount",
              "type": "number",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "FailedResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetAvailableScreenFlowNamesResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ScreenFlowNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "GetByExternalCustomerIdResponse": {
      "description": "",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "CustomerId": {
              "format": "uuid",
              "description": "An identifier for a customer generated when the customer was created",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            },
            "CustomerName": {
              "description": "Customer name",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetCurrentUserResponse": {
      "description": "GetCurrentUser operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "CurrentUser": {
              "$ref": "#/definitions/UserInfo",
              "description": "Current user"
            }
          }
        }
      ],
      "properties": {}
    },
    "UserInfo": {
      "description": "",
      "required": [],
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "Permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        }
      }
    },
    "Claim": {
      "required": [],
      "type": "object",
      "properties": {
        "m_issuer": {
          "type": "string"
        },
        "m_originalIssuer": {
          "type": "string"
        },
        "m_type": {
          "type": "string"
        },
        "m_value": {
          "type": "string"
        },
        "m_valueType": {
          "type": "string"
        },
        "m_properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GetPortalOneJsResponse": {
      "description": "Get PortalOneJs response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "JavascriptFileStream": {
              "$ref": "#/definitions/Stream",
              "description": "portalOne.js file stream"
            }
          }
        }
      ],
      "properties": {}
    },
    "Stream": {
      "required": [],
      "type": "object",
      "properties": {
        "__identity": {
          "type": "object"
        }
      }
    },
    "GetPortalConfigurationResponse": {
      "description": "Configuration for the portal.",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PortalSettings": {
              "$ref": "#/definitions/PortalSettings",
              "description": "Portal Settings"
            }
          }
        }
      ],
      "properties": {}
    },
    "PortalSettings": {
      "description": "portal Settings",
      "required": [],
      "type": "object",
      "properties": {
        "IsWalletActivated": {
          "description": "Indicates that wallet functionality is activated",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "MaxPaymentAmount": {
          "format": "decimal",
          "description": "Maximum allowed payment amount",
          "type": "number",
          "x-nullable": true
        },
        "CardExpirationDateFormat": {
          "description": "Card expiration date display format",
          "type": "string"
        },
        "ApplePayMerchantIdentifier": {
          "description": "Merchant identifier for Apple Pay",
          "type": "string"
        },
        "DefaultPortalFeeContext": {
          "description": "Default fee context for portal\r\n Possible values are: \"PaymentWithFee\" and \"PaymentWithoutFee\"",
          "type": "string"
        },
        "AllowedPaymentTypes": {
          "description": "Allowed payment types for portal. Possible values are: \"CreditCard\", \"Eft\", \"ApplePay\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "EnabledPortalUseCases": {
          "description": "Enabled use cases for portal. Possible values are: \"MakePayment\", \"MakePaymentWithToken\", \"MakePaymentWithWallet\", \"SavePaymentMethod\", \"ManagePaymentMethods\", \"CommunicationPreferences\", \"EnrollAutoPay\", \"EnrollAutoPayWithWallet\", \"QuickPay\", \"AccessToken\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ClientName": {
          "description": "Refers to portal setting 'ClientName'.",
          "type": "string"
        },
        "ClientPhone": {
          "description": "Refers to portal setting 'ClientPhone'.",
          "type": "string"
        },
        "TermsOfServiceUrl": {
          "description": "Link for Terms Of Services",
          "type": "string"
        },
        "MaxAllowedPaymentsCountPerRequest": {
          "format": "int32",
          "description": "The maximum allowed number of payments that can be made within one request. Refers to Multi Pay feature",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "GoogleAnalyticsSettings": {
          "$ref": "#/definitions/GoogleAnalyticsSettings",
          "description": "Google Analytics Settings"
        },
        "VerificationCodeSettings": {
          "$ref": "#/definitions/VerificationCodeSettings",
          "description": "Settings for verification code"
        },
        "SessionExpirationWarningTimeout": {
          "format": "int32",
          "description": "Session Expiration Warning Timeout in Milliseconds",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "SessionExpirationTimeout": {
          "format": "int32",
          "description": "Session Expiration Timeout in Milliseconds",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "TabTitle": {
          "description": "Tab Title Text",
          "type": "string"
        },
        "TabIconId": {
          "format": "uuid",
          "description": "Tab IconId(FileDataGuid)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000",
          "x-nullable": true
        },
        "XsrfCookieName": {
          "description": "Name of the cookie containing the XSRF token",
          "type": "string"
        },
        "EnableGiactLegalNotice": {
          "description": "Flag that enables GIACT Legal notice screen on BAV failure.",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "ComplianceText": {
          "description": "Collection of Compliance Texts",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ScheduledPaymentMaxFutureDays": {
          "format": "int32",
          "description": "Max future days for scheduled payment",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "GoogleAnalyticsSettings": {
      "required": [],
      "type": "object",
      "properties": {
        "TrackingIds": {
          "description": "Tracking Ids for Google Analytics",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Dimensions": {
          "description": "Dimensions to track for Google Analytics",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VerificationCodeSettings": {
      "required": [],
      "type": "object",
      "properties": {
        "ExpirationInterval": {
          "description": "Verification code expiration timeout in minutes",
          "type": "string",
          "x-emitDefaultValue": true
        }
      }
    },
    "GetPortalStylesResponse": {
      "description": "Get PortalStyles response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "PortalStyles": {
              "description": "Collection of portal styles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PortalStyle"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "PortalStyle": {
      "description": "Portal Style",
      "required": [],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "RenderedStyle": {
          "type": "string"
        }
      }
    },
    "DownloadReceiptResponse": {
      "description": "Get Receipt response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "FileContent": {
              "format": "byte",
              "description": "Receipt file content",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "TokenType": {
      "description": "Token type",
      "enum": [
        "CreditCard",
        "Eft"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "TokenType",
        "values": [
          {
            "name": "CreditCard",
            "value": 0
          },
          {
            "name": "Eft",
            "value": 1
          }
        ]
      }
    },
    "GetTokenInfoResponse": {
      "description": "GetInfoResponse response data",
      "required": [
        "TokenType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "TokenType"
          ],
          "type": "object",
          "properties": {
            "TokenType": {
              "$ref": "#/definitions/TokenType"
            },
            "Eft": {
              "$ref": "#/definitions/TokenEftInfo",
              "description": "EFT details"
            },
            "CreditCard": {
              "$ref": "#/definitions/TokenCreditCardInfo",
              "description": "Credit card details"
            },
            "ClientReferenceData": {
              "$ref": "#/definitions/ClientReferenceData",
              "description": "Client reference data"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetTransactionsByCustomerAndClientRefDataResponse": {
      "description": "GetTransactionsByCustomerAndClientRefData operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Transactions": {
              "description": "Collection of transactions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionInformation"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ReturnReasonType": {
      "description": "Return reason type",
      "enum": [
        "Chargeback",
        "ChargebackCredit",
        "Eft"
      ],
      "type": "string",
      "x-nullable": true,
      "x-ms-enum": {
        "name": "ReturnReasonType",
        "values": [
          {
            "name": "Chargeback",
            "value": 0
          },
          {
            "name": "ChargebackCredit",
            "value": 1
          },
          {
            "name": "Eft",
            "value": 2
          }
        ]
      }
    },
    "TransactionInformation": {
      "description": "Transaction Information",
      "required": [
        "TransactionType",
        "TransactionStatus",
        "CreditCardType",
        "BankAccountType"
      ],
      "type": "object",
      "properties": {
        "TransactionId": {
          "description": "Transaction Id",
          "type": "string"
        },
        "InternalReferenceTransactionId": {
          "description": "Internal Reference Transaction Id",
          "type": "string"
        },
        "OriginalAmount": {
          "format": "decimal",
          "description": "Original amount of the transaction",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "PostedAmount": {
          "format": "decimal",
          "description": "Posted amount of the transaction",
          "type": "number",
          "x-emitDefaultValue": true
        },
        "TransactionType": {
          "$ref": "#/definitions/TransactionType"
        },
        "TransactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "Payment date",
          "type": "string",
          "x-emitDefaultValue": true
        },
        "TimeZone": {
          "description": "Client time zone",
          "type": "string"
        },
        "CreditCardType": {
          "$ref": "#/definitions/CreditCardType"
        },
        "LastFourDigits": {
          "description": "Last 4 digits of the credit card or the bank account",
          "type": "string"
        },
        "RoutingNumber": {
          "description": "Routing number",
          "type": "string"
        },
        "AccountNumber": {
          "description": "Account number",
          "type": "string"
        },
        "BatchNumber": {
          "format": "int32",
          "description": "Batch number",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "InstanceName": {
          "description": "Merchant instance name",
          "type": "string"
        },
        "CustomerName": {
          "description": "Customer name",
          "type": "string"
        },
        "ClientReferenceData": {
          "$ref": "#/definitions/ClientReferenceData",
          "description": "Client extra data"
        },
        "ProcessOneToken": {
          "description": "ProcessOne token",
          "type": "string"
        },
        "CreditCardExpirationMonth": {
          "format": "int32",
          "description": "Credit card expiration month",
          "type": "integer",
          "x-nullable": true
        },
        "CreditCardExpirationYear": {
          "format": "int32",
          "description": "Credit card expiration year",
          "type": "integer",
          "x-nullable": true
        },
        "BankName": {
          "description": "Bank name",
          "type": "string"
        },
        "BankAccountType": {
          "$ref": "#/definitions/EftAccountType"
        },
        "ReturnReasonType": {
          "$ref": "#/definitions/ReturnReasonType"
        },
        "ReturnReasonCode": {
          "description": "Return reason code",
          "type": "string"
        },
        "BaseCardType": {
          "$ref": "#/definitions/CreditCardType"
        },
        "AccountGroupCode": {
          "description": "Account group code",
          "type": "string"
        },
        "CustomerId": {
          "description": "Customer Id",
          "type": "string"
        }
      }
    },
    "AcknowledgePaymentResponse": {
      "description": "AcknowledgePayment operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "PolicySearchResponse": {
      "description": "PolicySearch response data",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Results": {
              "description": "List of policies matching the search criteria",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyDetailSearchResult"
              }
            },
            "TotalResultsNumber": {
              "format": "int32",
              "description": "The total number of policies",
              "type": "integer",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "PolicyDetailSearchResult": {
      "description": "Policy Info Response",
      "required": [],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "ONE Inc customer identifier that will be used to fetch available payment methods",
          "type": "string"
        },
        "AccountId": {
          "description": "Account Identifier",
          "type": "string"
        },
        "Properties": {
          "description": "Generic Key/Value Property list. Every value from this list could be added to search result view",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SaveResponseBase": {
      "required": [
        "discriminator_SaveResponseBase"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Token": {
              "description": "ProcessOne payment token",
              "type": "string"
            },
            "TokenCreationTime": {
              "format": "date-time",
              "description": "Token creation date and time in merchant time zone",
              "type": "string",
              "x-nullable": true
            },
            "TimeZone": {
              "description": "Short time zone name with daylight saving time suffix",
              "type": "string"
            },
            "PaymentMethodId": {
              "format": "int32",
              "description": "Related payment method identifier",
              "type": "integer",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {
        "discriminator_SaveResponseBase": {
          "type": "string"
        }
      },
      "discriminator": "discriminator_SaveResponseBase"
    },
    "AuthenticationFailedResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FailedResponse"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "DeletePaymentMethodResponse": {
      "description": "Delete payment method operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetEftConvenienceFeeResponse": {
      "description": "GetConvenienceFee operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeeResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SetDefaultPaymentMethodResponse": {
      "description": "SetDefault payment method operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CreditEftResponse": {
      "description": "Eft credit response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EftResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "EftResponseBase": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ChargeResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "BankName": {
              "description": "Bank name",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "GetConvenienceFeeResponseBase": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "ConvenienceFee": {
              "format": "decimal",
              "description": "Convenience fee amount",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "CalculationType": {
              "description": "Calculation type",
              "type": "string"
            },
            "FlatRate": {
              "format": "decimal",
              "description": "Flat rate",
              "type": "number",
              "x-nullable": true
            },
            "Percent": {
              "format": "decimal",
              "description": "Percent",
              "type": "number",
              "x-nullable": true
            },
            "MinimumAmount": {
              "format": "decimal",
              "description": "Minimum amount",
              "type": "number",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetCardConvenienceFeeResponse": {
      "description": "GetConvenienceFee operation response for credit card",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GetConvenienceFeeResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "UpdateCardResponse": {
      "description": "Update card operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "TimeZone": {
              "description": "Time zone",
              "type": "string"
            },
            "UpdateTime": {
              "format": "date-time",
              "description": "Card update time",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      ],
      "properties": {}
    },
    "GetBankDataResponse": {
      "description": "GetBankData operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "BankName": {
              "description": "Bank name",
              "type": "string"
            },
            "BankAddress": {
              "description": "Bank address",
              "type": "string"
            },
            "BankCity": {
              "description": "Bank city",
              "type": "string"
            },
            "BankState": {
              "description": "Bank state",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ValidateSessionResponse": {
      "description": "ValidateSession method response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "VerifyBankAccountResponse": {
      "description": "VerifyBankAccount operation response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "VerifyBankAccountDescription": {
              "description": "Operation result description",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "DataCollectionStatus": {
      "enum": [
        "Undefined",
        "Started",
        "InProgress",
        "Finished"
      ],
      "type": "string",
      "x-emitDefaultValue": true,
      "x-ms-enum": {
        "name": "DataCollectionStatus",
        "values": [
          {
            "name": "Undefined",
            "value": 0
          },
          {
            "name": "Started",
            "value": 1
          },
          {
            "name": "InProgress",
            "value": 2
          },
          {
            "name": "Finished",
            "value": 3
          }
        ]
      }
    },
    "GetCollectingDataStatusResponse": {
      "required": [
        "Status"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [
            "Status"
          ],
          "type": "object",
          "properties": {
            "CollectedData": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "Status": {
              "$ref": "#/definitions/DataCollectionStatus"
            },
            "StatusDescription": {
              "type": "string"
            },
            "Progress": {
              "format": "int32",
              "type": "integer",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "StartCollectingDataResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "DataCollectionId": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000",
              "x-emitDefaultValue": true
            }
          }
        }
      ],
      "properties": {}
    },
    "StopCollectingDataResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "CancelLinkResponse": {
      "description": "Cancel Link Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "GetLinkStatusResponse": {
      "description": "Link Status Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "DataItems": {
              "description": "Status related data items",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "SavePaymentMethodBaseResponse": {
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApiResponseBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "LinkId": {
              "description": "Link identifier",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "SavePaymentMethodWithEmailResponse": {
      "description": "Save Payment Method With Email Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SavePaymentMethodBaseResponse"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SavePaymentMethodWithTextResponse": {
      "description": "Save Payment Method With Text Response",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SavePaymentMethodBaseResponse"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "AutoPolicyDetails": {
      "description": "Auto Policy Details",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyDetailsBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Drivers": {
              "description": "Drivers collection",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Driver"
              }
            },
            "Vehicles": {
              "description": "Vehicles collection",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vehicle"
              }
            },
            "PolicyCoverages": {
              "description": "Policy Coverages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coverage"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "Driver": {
      "description": "Driver",
      "required": [],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "First Name",
          "type": "string"
        },
        "LastName": {
          "description": "LastName",
          "type": "string"
        },
        "LicenseNumber": {
          "description": "License Number",
          "type": "string"
        },
        "RelationToNamedInsured": {
          "description": "Relation To Named Insured",
          "type": "string"
        }
      }
    },
    "Vehicle": {
      "description": "Vehicle",
      "required": [],
      "type": "object",
      "properties": {
        "Make": {
          "description": "Make",
          "type": "string"
        },
        "Model": {
          "description": "Model",
          "type": "string"
        },
        "Year": {
          "format": "int32",
          "description": "Year",
          "type": "integer",
          "x-emitDefaultValue": true
        },
        "Vin": {
          "description": "Vin",
          "type": "string"
        },
        "Coverages": {
          "description": "Coverages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coverage"
          }
        }
      }
    },
    "Coverage": {
      "description": "Coverage",
      "required": [],
      "type": "object",
      "properties": {
        "Type": {
          "description": "Type",
          "type": "string"
        },
        "LimitOrDeductible": {
          "description": "Limit And/Or Deductible",
          "type": "string"
        }
      }
    },
    "HomePolicyDetails": {
      "description": "Home Policy Details",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyDetailsBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {
            "Deductible": {
              "format": "decimal",
              "description": "Deductible",
              "type": "number",
              "x-emitDefaultValue": true
            },
            "Mortgagee": {
              "description": "Mortgagee",
              "type": "string"
            },
            "LoanNumber": {
              "description": "Loan Number",
              "type": "string"
            },
            "AgentName": {
              "description": "Agent Name",
              "type": "string"
            },
            "AgentPhoneNumber": {
              "description": "Agent Phone Number",
              "type": "string"
            },
            "Coverages": {
              "description": "Coverages",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coverage"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "OtherPolicyDetails": {
      "description": "Other Policy Details",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyDetailsBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "WorkersCompPolicyDetails": {
      "description": "Workers Compensation Policy Details",
      "required": [],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyDetailsBase"
        },
        {
          "required": [],
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "SaveRequestBase": {
      "required": [
        "discriminator_SaveRequestBase"
      ],
      "type": "object",
      "properties": {
        "CallbackId": {
          "description": "A callback id associated to save transaction",
          "type": "string"
        },
        "ClientReferenceData": {
          "$ref": "#/definitions/ClientReferenceData",
          "description": "Client reference data"
        },
        "CustomerId": {
          "description": "Client facing customer identifier",
          "type": "string"
        },
        "IsDefaultPaymentMethod": {
          "description": "Is default payment method flag",
          "type": "boolean",
          "x-emitDefaultValue": true
        },
        "ExtendedParameters": {
          "description": "The collection of key value pairs for optional parameters",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "PortalOneSessionKey": {
          "description": "Session key. Either Session key or Authentication key parameter is required",
          "type": "string"
        },
        "PortalOneAuthenticationKey": {
          "description": "Authentication key. Either Session key or Authentication key parameter is required",
          "type": "string"
        },
        "discriminator_SaveRequestBase": {
          "type": "string"
        }
      },
      "discriminator": "discriminator_SaveRequestBase"
    }
  }
}
